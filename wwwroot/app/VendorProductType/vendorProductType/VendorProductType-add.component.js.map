{"version":3,"sources":["VendorProductType/vendorProductType/VendorProductType-add.component.ts"],"names":["VendorProductTypeAddComponent","fb","vendorProductTypeService","router","authService","activatedRoute","this","errorMessage","prototype","ngOnInit","isLoggedIn","navigate","VendorProductTypeForm","group","name","forms_1","Validators","required","isactive","buyercode","data","VendorProductType_model_1","VendorProductType","title","ngAfterViewInit","jQuery","errorDiv","nativeElement","hide","ngOnDestroy","onSubmit","_this","console","log","vendorProductType","add","subscribe","error","displayMessage","onBack","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","VendorProductType_service_1","VendorProductTypeService","FormBuilder","exports_1"],"mappings":"o1CA+CAA,8BAAA,WAOI,QAAAA,+BACYC,GACAC,yBACAC,OACAC,YACAC,gBAJAC,KAAAL,GAAAA,GACAK,KAAAJ,yBAAAA,yBACAI,KAAAH,OAAAA,OACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eARZC,KAAAC,aAAe,KA2EnB,MAhEIP,+BAAAQ,UAAAC,SAAA,WACSH,KAAKF,YAAYM,cAClBJ,KAAKH,OAAOQ,UAAU,KAG1BL,KAAKM,sBAAwBN,KAAKL,GAAGY,OAE7BC,MAAO,IACHC,QAAAC,WAAWC,WAEfC,WAAW,GACXC,WAAY,MAIpBb,KAAKc,KAAO,GAAIC,2BAAAC,kBAAkB,GAAI,KAAM,MAAM,EAAO,IAAI,GAC7DhB,KAAKiB,MAAQ,yBAGjBvB,8BAAAQ,UAAAgB,gBAAA,WACIC,OAAOnB,KAAKoB,SAASC,eAAeC,QAGxC5B,8BAAAQ,UAAAqB,YAAA,WACIvB,KAAKJ,yBAAyBkB,KAAOd,KAAKc,MAG9CpB,8BAAAQ,UAAAsB,SAAA,SAASV,MAAT,GAAAW,OAAAzB,IACI0B,SAAQC,IAAIb,KACZ,IAAIc,mBAAoB,GAAIb,2BAAAC,kBAAkB,GAAI,KAAM,KAAMF,KAAKF,SAAUE,KAAKN,MAAM,EACxFR,MAAKJ,yBAAyBiC,IAAID,mBAAmBE,UAAU,SAAChB,MAC1C,MAAdA,KAAKiB,OACLN,MAAKX,KAAOA,KACZW,MAAKxB,aAAe,uCACpBwB,MAAKO,eAAeP,MAAKxB,cAAc,KAIvCwB,MAAKxB,aAAea,KAAKiB,MACzBN,MAAKO,eAAeP,MAAKxB,cAAc,KAG3C,SAAC8B,OACGN,MAAKxB,aAAe8B,MACpBN,MAAKO,eAAeP,MAAKxB,cAAc,MAMnDP,8BAAAQ,UAAA+B,OAAA,WACIjC,KAAKH,OAAOQ,UAAU,2BAI1BX,8BAAAQ,UAAA8B,eAAA,SAAeE,QAAiBC,QAC5BhB,OAAOnB,KAAKoB,SAASC,eAAee,cACpCpC,KAAKoB,SAASC,cAAcgB,UAAYH,QAEpCC,OAAUhB,OAAOnB,KAAKoB,SAASC,eAAeiB,SAAS,mBACpDnB,OAAOnB,KAAKoB,SAASC,eAAeiB,SAAS,iBAEpDnB,OAAOnB,KAAKoB,SAASC,eAAekB,UAAU,KAAMC,MAAM,KAAMC,QAAQ,MAxE5EC,YAACC,OAAAC,UAAU,oHA3CflD,8BAAAgD,YAACC,OAAAE,WACGC,SAAU,wBACVC,SAAU,2qDAiCVC,WAAYC,4BAAAC,yBAA0BzC,QAAA0C,gOAG1CC,UAAA,gCAAA1D","file":"VendorProductType-add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { VendorProductTypeService } from \"../shared/VendorProductType.service\";\nimport { VendorProductType } from \"../shared/VendorProductType.model\";\nimport { AuthService } from \"../../auth.service\";\n\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"VendorProductType-add\",\n    template: `\n    <div class=\"error-message\" #errorDiv></div>\n    <div *ngIf=\"data\">\n        <h2>\n            <a href=\"javascript:void(0)\" (click)=\"onBack()\">\n                &laquo; Back to VendorProductType List\n            </a>\n        </h2>\n        <div class=\"user-container\">\n            <form class=\"form-user\" [formGroup]=\"VendorProductTypeForm\">\n                <h2 class=\"form-user-heading\">{{title}}</h2>\n\n                <div class=\"form-group\">\n                    <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Enter name\" value=\"this.data.Name\" autofocus />\n                    <span class=\"validator-label valid\" *ngIf=\"this.VendorProductTypeForm.controls.name.valid\">\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\n                        valid!\n                    </span>\n                    <span class=\"validator-label invalid\" *ngIf=\"!this.VendorProductTypeForm.controls.name.valid && !this.VendorProductTypeForm.controls.name.pristine\">\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                        invalid\n                    </span>\n                </div>\n                <div class=\"form-group\">\n                    Is Active? <input formControlName=\"isactive\" type=\"checkbox\" value=\"this.data.IsActive\" autofocus />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!VendorProductTypeForm.valid\" value=\"Add\" (click)=\"onSubmit(this.VendorProductTypeForm.value)\" />\n                </div>\n            </form>\n        </div>\n    </div>\n`,\n    providers: [VendorProductTypeService, FormBuilder]\n})\n\nexport class VendorProductTypeAddComponent {\n    data: VendorProductType;\n    title: string;\n    VendorProductTypeForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private vendorProductTypeService: VendorProductTypeService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n\n        this.VendorProductTypeForm = this.fb.group(\n            {\n                name: [\"\", [\n                    Validators.required\n                ]],\n                isactive: [true],\n                buyercode: [\"\"]\n            }\n        );\n\n        this.data = new VendorProductType(\"\", null, null, false, \"\", false);\n        this.title = \"New VendorProductType\";\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    ngOnDestroy() {\n        this.vendorProductTypeService.data = this.data;\n    }\n\n    onSubmit(data: any) {\n        console.log(data);\n        var vendorProductType = new VendorProductType(\"\", null, null, data.isactive, data.name, false);\n        this.vendorProductTypeService.add(vendorProductType).subscribe((data) => {\n            if (data.error == null) {\n                this.data = data;\n                this.errorMessage = 'VendorProductType added successfully';\n                this.displayMessage(this.errorMessage, true);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        );\n\n    }\n\n    onBack() {\n        this.router.navigate([\"vendorproducttypelist\"]);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n}"]}