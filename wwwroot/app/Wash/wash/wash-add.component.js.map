{"version":3,"sources":["Wash/wash/wash-add.component.ts"],"names":["WashAddComponent","fb","washService","categoryService","accproductnameService","washtypeService","brandService","deptService","divisionService","colorService","router","authService","activatedRoute","this","errorMessage","prototype","changeType","id","_this","disableCategory","disableProductName","getWashCateogryListByType","subscribe","items","categories","error","changeCategory","getWashProductNameByCategory","productnames","doUpload","jQuery","trigger","ngOnInit","isLoggedIn","navigate","washForm","group","buyercode","isactive","washcategory","forms_1","Validators","required","washproductname","washtype","recipe","supplier","suppliercode","brand","division","remark","department","color","description","pageall","pagination_model_1","PaginationModel","getAll","generalsearch_model_1","GeneralSearchModel","getWashCategoryList","Data","getWashProductNameList","getWashTypeList","types","getBrandList","brands","getDepartmentList","departments","getDivisionList","divisions","getColorList","colors","data","wash_model_1","Wash","title","fileChangeEvent","fileInput","FileList","target","files","formData","FormData","length","undefined","imageList","Images","alert","i","length_1","append","name","upload","changeImage","path","MainImage","onSubmit","imagestring","UploadPath","newData","add","__decorate","core_1","ViewChild","Component","selector","templateUrl","providers","wash_service_1","WashService","FormBuilder","washcategory_service_1","WashCategoryService","washproductname_service_1","WashProductNameService","brand_service_1","BrandService","washtype_service_1","WashTypeService","department_service_1","DepartmentService","division_service_1","DivisionService","color_service_1","ColorService","exports_1"],"mappings":"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","file":"wash-add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport 'rxjs/Rx';\r\nimport { AuthHttp } from \"../../auth.http\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Wash } from \"../../Wash/shared/wash.model\";\r\nimport { WashService } from \"../../Wash/shared/wash.service\";\r\n\r\nimport { WashCategory } from \"../../WashCategory/shared/washcategory.model\";\r\nimport { WashCategoryService } from \"../../WashCategory/shared/washcategory.service\";\r\n\r\nimport { WashProductName } from \"../../WashProductName/shared/washproductname.model\";\r\nimport { WashProductNameService } from \"../../WashProductName/shared/washproductname.service\";\r\n\r\nimport { Color } from \"../../Color/shared/color.model\";\r\nimport { ColorService } from \"../../Color/shared/color.service\";\r\nimport { ColorSearchModel } from \"../../Color/shared/color-search.model\";\r\n\r\nimport { WashType } from \"../../WashType/shared/washtype.model\";\r\nimport { WashTypeService } from \"../../WashType/shared/washtype.service\";\r\n\r\nimport { Department } from \"../../Department/shared/department.model\";\nimport { DepartmentService } from \"../../Department/shared/department.service\";\nimport { Division } from \"../../Division/shared/division.model\";\nimport { DivisionService } from \"../../Division/shared/division.service\";\nimport { Brand } from \"../../Brand/shared/brand.model\";\nimport { BrandService } from \"../../Brand/shared/brand.service\";\r\nimport { AuthService } from \"../../auth.service\";\r\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\r\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\r\nimport { ImageListModel } from \"../../FileUpload/shared/imagelist.model\";\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: \"wash-add\",\r\n    templateUrl: 'app/Wash/wash/wash-add.component.html',\r\n    providers: [WashService, FormBuilder, WashCategoryService, WashProductNameService, BrandService, WashTypeService, DepartmentService, DivisionService, ColorService]\r\n})\r\n\r\nexport class WashAddComponent {\r\n    data: Wash;\r\n    title: string;\r\n    washForm: FormGroup;\r\n    errorMessage = null;\r\n    @ViewChild('errorDiv') errorDiv: ElementRef;\r\n    categories: WashCategory[];\r\n    productnames: WashProductName[];\r\n    types: WashType[];\r\n    brands: Brand[];\r\n    departments: Department[];\r\n    divisions: Division[];\r\n    colors: Color[];\r\n    disableProductName: boolean;\r\n    disableCategory: boolean;\r\n    imageList: ImageListModel;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private washService: WashService,\r\n        private categoryService: WashCategoryService,\r\n        private accproductnameService: WashProductNameService,\r\n        private washtypeService: WashTypeService,\r\n        private brandService: BrandService,\r\n        private deptService: DepartmentService,\r\n        private divisionService: DivisionService,\r\n        private colorService: ColorService,\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private activatedRoute: ActivatedRoute) {\r\n    }\r\n    changeType(id: string) {\n        if (id === \"\") {\r\n\r\n            this.disableCategory = true;\r\n            this.disableProductName = true;\r\n        } else {\r\n\r\n            this.disableCategory = false;\r\n            this.categoryService.getWashCateogryListByType(id).subscribe(items => this.categories = items, error => this.errorMessage = <any>error);\r\n        }\r\n\n\n    }\r\n    changeCategory(id: string) {\n        if (id === \"\") {\r\n\r\n            this.disableProductName = true;\r\n        } else {\r\n            this.disableProductName = false;\r\n            this.accproductnameService.getWashProductNameByCategory(id).subscribe(items => this.productnames = items, error => this.errorMessage = <any>error);\r\n        }\n\n    }\r\n    doUpload() {\n        jQuery(\"#files\").trigger(\"click\");\n    }\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.disableCategory = true;\r\n        this.disableProductName = true;\r\n        this.washForm = this.fb.group(\r\n            {\r\n                buyercode: [\"\"],\r\n                isactive: [true],\r\n                washcategory: [\"\", [Validators.required]],\r\n                washproductname: [\"\", [Validators.required]],\r\n                washtype: [\"\", [Validators.required]],\r\n                recipe: [\"\"],\r\n                supplier: [\"\"],\r\n                suppliercode: [\"\"],\r\n                brand: [\"\", [Validators.required]],\r\n                division: [\"\", [Validators.required]],\r\n                remark: [\"\"],\r\n                department: [\"\", [Validators.required]],\r\n                color: [\"\", [Validators.required]],\r\n                description: [\"\"]\r\n\r\n\r\n            }\r\n        );\r\n        var pageall = new PaginationModel(10, 0, \"Name\", 0, [], 0);\r\n        var getAll = new GeneralSearchModel(\"\", \"\", \"\", \"\", pageall);\r\n\r\n        this.categoryService.getWashCategoryList(getAll).subscribe(items => this.categories = items.Data, error => this.errorMessage = <any>error);\r\n        this.accproductnameService.getWashProductNameList(getAll).subscribe(items => this.productnames = items.Data, error => this.errorMessage = <any>error);\r\n        this.washtypeService.getWashTypeList(getAll).subscribe(items => this.types = items.Data, error => this.errorMessage = <any>error);\r\n        this.brandService.getBrandList(getAll).subscribe(items => this.brands = items.Data, error => this.errorMessage = <any>error);\r\n        this.deptService.getDepartmentList(getAll).subscribe(items => this.departments = items.Data, error => this.errorMessage = <any>error);\r\n        this.divisionService.getDivisionList(getAll).subscribe(items => this.divisions = items.Data, error => this.errorMessage = <any>error);\r\n        this.colorService.getColorList(getAll).subscribe(items => this.colors = items.Data, error => this.errorMessage = <any>error);\r\n        this.data = new Wash(\"\", false, \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",[],\"\");\r\n        this.title = \"New Wash\";\r\n    }\r\n\r\n     \r\n    fileChangeEvent(fileInput: any) {\n       // UPLOAD BY ANGULAR 2\n\n        let FileList: FileList = fileInput.target.files;\r\n        let formData: FormData = new FormData();\r\n        if (FileList.length > 5 || (this.imageList !==undefined && this.imageList.Images.length + FileList.length > 5)) {\r\n            alert(\"Files number cannot exceed 5!\");\r\n            return;\r\n        }\r\n        for (let i = 0, length = FileList.length; i < length; i++) {\r\n            formData.append('uploadFile' + i, FileList[i], FileList[i].name);\r\n        }\r\n        \r\n        this.washService.upload(formData).subscribe(items => this.imageList = items, error => this.errorMessage = <any>error);   \r\n        \r\n    }\r\n    changeImage(path: string) {\r\n        this.imageList.MainImage = path;\r\n    }\r\n    onSubmit(data: any) {\r\n        //get images\r\n        var imagestring = \"\";\r\n        for (let i = 0; i < this.imageList.Images.length; i++) {\r\n            imagestring += this.imageList.Images[i].UploadPath + \"|\";\r\n        }\r\n       \r\n        var newData = new Wash(\"\", data.isactive, data.buyercode, data.washcategory, data.washproductname, data.washtype, data.description, data.brand, data.department, data.division, data.color\r\n            , data.supplier, data.suppliercode, data.recipe, data.remark, imagestring,[],\"\")\r\n        this.washService.add(newData).subscribe((data) => {\r\n            if (data.error == null) {\r\n                this.data = data;\r\n                alert(\"Added successfully!\");\r\n                this.router.navigate([\"/wash\"]);\r\n            }\r\n            else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                alert(this.errorMessage);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}"]}