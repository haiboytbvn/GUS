{"version":3,"sources":["Vendor/Vendor-list/Vendor-list.component.ts"],"names":["VendorListComponent","vendorService","authService","router","this","title","toggle","isDelete","isLoading","prototype","ngOnInit","_this","isLoggedIn","navigate","getVendorList","subscribe","items","Vendors","error","errorMessage","ngAfterViewInit","jQuery","actionDiv","nativeElement","hide","errorDiv","onSelect","data","selectedData","Id","addNewCategory","onDelete","filter","checked","forEach","delete","setTimeout","showActionDiv","status","width","show","direction","deleteConfirm","close","toggleItem","every","length","toggleAll","displayMessage","message","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","Vendor_service_1","VendorService","exports_1"],"mappings":"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","file":"Vendor-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { VendorService } from \"../shared/Vendor.service\";\nimport { Vendor } from \"../shared/Vendor.model\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../auth.service\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'Vendor',\n    template: `\n    <div class=\"error-message\" #errorDiv></div>\n    <div class=\"user-container\">\n        <h1 class=\"homeHeader\">{{title}}</h1>\n        <div class=\"col-right-s3 form-group\">\n            <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"Add\" (click)=\"addNewCategory()\" />\n        </div>\n        <div class=\"clearDiv\">\n        </div>\n        <div #actionDiv class=\"col-half-one-third leftPane\">\n            <div class=\"leftPaneContent form-group\">\n                <h2>Bulk Actions</h2>\n                <button class=\"btn btn-danger btn-block\" (click)=\"deleteConfirm()\" [disabled]=\"isLoading\">\n                    <div [class.cssload-container]=\"isLoading\">\n                        <div [class.cssload-zenith]=\"isLoading\"></div>\n                    </div>\n                    <div [class.cssload-text]=\"isLoading\">Delete</div>\n                </button>\n\n                <div class=\"dialog\" *ngIf=\"isDelete\">\n                    <h3>Are you sure to delete checked items ?</h3>\n                    <input type=\"button\" class=\"btn btn-danger btn-block\" value=\"Yes\" (click)=\"onDelete()\" />   <br />\n                    <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"No\" (click)=\"close()\" />\n                </div>\n                <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\n            </div>\n        </div>\n        <div class=\"col-half-two-third\">\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>Select All<br /><input type=\"checkbox\" [checked]=\"toggle\" (change)=\"toggleAll()\" /></th>\n                        <th>Name</th>\n\n                        <th>Email</th>\n                        <th>SearchName</th>\n                        <th>Address</th>\n                        <th>PostalCode</th>\n                        <th>City</th>\n                        <th>Country</th>\n                        <th>Tel</th>\n                        <th>Fax</th>\n                        <th>Homepage</th>\n                        <th>PaymentTerm</th>\n                        <th>DeliveryTerm</th>\n\n                        <th>Is Active</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let Vendor of Vendors\" [class.selected]=\"Vendor === selectedData\">\n                        <td><input type=\"checkbox\" #chkSelect value=\"{{Vendor.Id}}\" [checked]=\"Vendor.checked\" (change)=\"toggleItem(Vendor)\" /></td>\n                        <td><a href=\"Vendorlist/edit/{{Vendor.Id}}\">{{Vendor.UserName}}</a></td>\n\n                        <td>{{Vendor.Email}}</td>\n                        <td>{{Vendor.SearchName}}</td>\n                        <td>{{Vendor.Address}}</td>\n                        <td>{{Vendor.PostalCode}}</td>\n                        <td>{{Vendor.City}}</td>\n                        <td>{{Vendor.Country}}</td>\n                        <td>{{Vendor.Tel}}</td>\n                        <td>{{Vendor.Fax}}</td>\n                        <td>{{Vendor.Homepage}}</td>\n                        <td>{{Vendor.PaymentTerm}}</td>\n                        <td>{{Vendor.DeliveryTerm}}</td>\n\n                        <td>{{Vendor.IsActive}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"clearDiv\">\n        </div>\n    </div>\n`,\n    providers: [VendorService]\n})\n\nexport class VendorListComponent {\n    title = \"Vendor List\";\n    selectedData: Vendor;\n    errorMessage: string;\n    toggle = false;\n    isDelete = false;\n    isLoading = false;\n    @ViewChild('actionDiv') actionDiv: ElementRef;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n\n    Vendors: Vendor[];\n    constructor(private vendorService: VendorService, private authService: AuthService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        this.vendorService.getVendorList().subscribe(items => this.Vendors = items, error => this.errorMessage = <any>error);\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.actionDiv.nativeElement).hide();\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    onSelect(data: Vendor) {\n        this.selectedData = data;\n        this.router.navigate([\"vendorList/edit\", this.selectedData.Id]);\n    }\n\n    addNewCategory() {\n        this.router.navigate([\"vendorlist/add\"]);\n    }\n\n\n    onDelete(data: Vendor) {\n        this.isDelete = false;\n        this.isLoading = true;\n\n        this.Vendors.filter(data => data.checked).forEach(selectedData =>\n            this.vendorService.delete(selectedData.Id).subscribe((data) => {\n                if (data.error == null) {\n                    this.errorMessage = 'deleted selected data(s) successfully';\n                    setTimeout(() => {\n                        this.isLoading = false,\n                            jQuery(this.actionDiv.nativeElement).hide(1000),\n                            this.vendorService.getVendorList().subscribe(items => this.Vendors = items, error => this.errorMessage = <any>error);\n                    }, 2000);\n                }\n            })\n        );\n    }\n    showActionDiv(status: boolean) {\n        var boxWidth = jQuery(this.actionDiv.nativeElement).width();\n        if (status)\n            jQuery(this.actionDiv.nativeElement).show({ direction: \"left\" }, 1000);\n        else\n            jQuery(this.actionDiv.nativeElement).hide(1000);\n    }\n\n    deleteConfirm() {\n        this.isDelete = true;\n    }\n\n    close() {\n        this.isDelete = false;\n    }\n\n    toggleItem(data) {\n        data.checked = !data.checked;\n        this.toggle = this.Vendors.every(data => data.checked);\n\n        this.showActionDiv(this.Vendors.filter(data => data.checked).length > 0);\n    }\n    toggleAll() {\n        this.toggle = !this.toggle;\n        this.Vendors.forEach(data => data.checked = this.toggle);\n        this.showActionDiv(this.Vendors.filter(data => data.checked).length > 0);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n\n\n\n\n}"]}