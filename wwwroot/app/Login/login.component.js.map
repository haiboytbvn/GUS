{"version":3,"sources":["Login/login.component.ts"],"names":["LoginComponent","fb","router","authService","this","title","loginForm","loginError","isLoggedIn","navigate","group","username","forms_1","Validators","required","password","prototype","performLogin","e","_this","preventDefault","value","login","subscribe","data","auth","getAuth","alert","access_token","err","console","log","__decorate","core_1","Component","selector","template","exports_1"],"mappings":"kgCAgCAA,eAAA,WAII,QAAAA,gBAAoBC,GAAyBC,OAAwBC,aAAjDC,KAAAH,GAAAA,GAAyBG,KAAAF,OAAAA,OAAwBE,KAAAD,YAAAA,YAHrEC,KAAAC,MAAQ,QACRD,KAAAE,UAAY,KACZF,KAAAG,YAAa,EAELH,KAAKD,YAAYK,cACjBJ,KAAKF,OAAOO,UAAU,KAE1BL,KAAKE,UAAYL,GAAGS,OAChBC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWC,YAuBtC,MAnBId,gBAAAgB,UAAAC,aAAA,SAAaC,GAAb,GAAAC,OAAAf,IACIc,GAAEE,gBACF,IAAIT,UAAWP,KAAKE,UAAUe,MAAMV,SAChCI,SAAWX,KAAKE,UAAUe,MAAMN,QAEpCX,MAAKD,YAAYmB,MAAMX,SAAUI,UAC5BQ,UAAU,SAACC,MAERL,MAAKZ,YAAa,CAClB,IAAIkB,MAAON,MAAKhB,YAAYuB,SAC5BC,OAAM,4BAA8BF,KAAKG,cACzCT,MAAKjB,OAAOO,UAAU,MAE1B,SAACoB,KACGC,QAAQC,IAAIF,KAEZV,MAAKZ,YAAa,KA1DlCP,eAAAgC,YAACC,OAAAC,WACGC,SAAU,QACVC,SAAU,4kCA0BdC,UAAA,iBAAArC","file":"login.component.js","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../auth.service\";\r\n@Component({\r\n    selector: \"login\",\r\n    template: `\r\n    <div>\r\n        <h2>Login</h2>\r\n        <div role=\"alert\" *ngIf=\"loginError\">\r\n            <strong>Warning:</strong> Username or Password mismatch\r\n        </div>\r\n        <form [formGroup]=\"loginForm\" (submit)=\"performLogin($event)\">\r\n            <input formControlName=\"username\" type=\"text\" placeholder=\"Your username or e-mail address\" required autofocus />\r\n            <input formControlName=\"password\" type=\"password\" placeholder=\"Your password\" required />\r\n            <div class=\"checkbox\">\r\n                <label>\r\n                    <input type=\"checkbox\" value=\"remember-me\">\r\n                    Remember me\r\n                </label>\r\n            </div>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n                Sign in\r\n            </button>\r\n            <br>\r\n            <p>User name : admin</p>\r\n            <p>Password  : Pass4Admin</p>\r\n            <p>For test only, please ignore</p>\r\n        </form>\r\n    </div>\r\n`\r\n})\r\nexport class LoginComponent {\r\n    title = \"Login\";\r\n    loginForm = null;\r\n    loginError = false;\r\n    constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\r\n        if (this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.loginForm = fb.group({\r\n            username: [\"\", Validators.required],\r\n            password: [\"\", Validators.required]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n        var username = this.loginForm.value.username;\r\n        var password = this.loginForm.value.password;\r\n\r\n        this.authService.login(username, password)\r\n            .subscribe((data) => {\r\n                // login successful\r\n                this.loginError = false;\r\n                var auth = this.authService.getAuth();\r\n                alert(\"Login success, Token is: \" + auth.access_token);\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (err) => {\r\n                console.log(err);\r\n                // login failure\r\n                this.loginError = true;\r\n            });\r\n    }\r\n}"]}