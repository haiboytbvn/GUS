{"version":3,"sources":["Color/color/color-edit.component.ts"],"names":["ColorEditComponent","fb","colorService","divisionService","deptServcie","brandService","router","authService","activatedRoute","this","title","errorMessage","isDelete","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","data","paging","pagination_model_1","PaginationModel","searchModel","generalsearch_model_1","GeneralSearchModel","searchGeneralFilter_model_1","SearchGeneralFilter","getBrandList","items","brands","Data","error","getDepartmentList","depts","getDivisionList","divisions","iseditting","buttonvalue","fileChangeEvent","fileUpload","jQuery","files","FormData","i","length","append","name","ajax","type","url","contentType","processData","success","val","UploadPath","attr","Image","FileName","Size","alert","onUpdate","update","isFormChanged","value","Id","oldData","isFormDataChanged","JSON","stringify","__decorate","core_1","Component","selector","templateUrl","providers","color_service_1","ColorService","forms_1","FormBuilder","department_service_1","DepartmentService","brand_service_1","BrandService","division_service_1","DivisionService","exports_1"],"mappings":"w9DAuBAA,mBAAA,WAeI,QAAAA,oBACYC,GACAC,aACAC,gBACAC,YACAC,aACAC,OACAC,YACAC,gBAPAC,KAAAR,GAAAA,GACAQ,KAAAP,aAAAA,aACAO,KAAAN,gBAAAA,gBACAM,KAAAL,YAAAA,YACAK,KAAAJ,aAAAA,aACAI,KAAAH,OAAAA,OACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eArBZC,KAAAC,MAAQ,aAERD,KAAAE,aAAe,KACfF,KAAAG,UAAW,EACXH,KAAAI,qBAAsB,EAkH1B,MA9FIb,oBAAAc,UAAAC,SAAA,WAAA,GAAAC,OAAAP,IACSA,MAAKF,YAAYU,cAClBR,KAAKH,OAAOY,UAAU,IAG1B,IAAIC,IAAMV,KAAKD,eAAeY,SAASC,OAAW,EAC9CF,IACAV,KAAKP,aAAaoB,IAAIH,IAAII,UAAU,SAACC,MACjCR,MAAKQ,KAAOA,OAIhBf,KAAKH,OAAOY,UAAU,cAE1BT,KAAKgB,OAAS,GAAIC,oBAAAC,gBAAgB,GAAI,EAAG,OAAQ,KAAO,GACxDlB,KAAKmB,YAAc,GAAIC,uBAAAC,mBAAmB,GAAI,GAAI,GAAI,GAAIrB,KAAKgB,OACrC,IAAIM,6BAAAC,oBAAoB,GAAI,GAAI,GAAI,GAC9DvB,MAAKJ,aAAa4B,aAAaxB,KAAKmB,aAAaL,UAAU,SAAAW,OAAS,MAAAlB,OAAKmB,OAASD,MAAME,MAAM,SAAAC,OAAS,MAAArB,OAAKL,aAAoB0B,QAChI5B,KAAKL,YAAYkC,kBAAkB7B,KAAKmB,aAAaL,UAAU,SAAAW,OAAS,MAAAlB,OAAKuB,MAAQL,MAAME,MAAM,SAAAC,OAAS,MAAArB,OAAKL,aAAoB0B,QACnI5B,KAAKN,gBAAgBqC,gBAAgB/B,KAAKmB,aAAaL,UAAU,SAAAW,OAAS,MAAAlB,OAAKyB,UAAYP,MAAME,MAAM,SAAAC,OAAS,MAAArB,OAAKL,aAAoB0B,QACzI5B,KAAKiC,YAAa,EAClBjC,KAAKkC,YAAc,QAKvB3C,mBAAAc,UAAA8B,gBAAA,WACInC,KAAKI,qBAAsB,CAI3B,KAAK,GAHDgC,YAAaC,OAAO,UAAUxB,IAAI,GAClCyB,MAAQF,WAAWE,MACnBvB,KAAO,GAAIwB,UACNC,EAAI,EAAGA,EAAIF,MAAMG,OAAQD,IAC9BzB,KAAK2B,OAAOJ,MAAME,GAAGG,KAAML,MAAME,GAErCH,QAAOO,MACHC,KAAM,OACNC,IAAK,wBACLC,aAAa,EACbC,aAAa,EACbjC,KAAMA,KACNkC,QAAS,SAAUlC,MACfsB,OAAO,gBAAgBa,IAAInC,KAAKoC,YAChCd,OAAO,eAAee,KAAK,MAAOrC,KAAKoC,YACvCnD,KAAKe,KAAKsC,MAAQtC,KAAKoC,WACvBd,OAAO,YAAYK,OAAO,QAAU3B,KAAKuC,SAAW,SAAWvC,KAAKwC,KAAO,2BAE/E3B,MAAO,WACH4B,MAAM,wCAKlBjE,mBAAAc,UAAAoD,SAAA,SAAS1C,MAAT,GAAAR,OAAAP,IACQA,MAAKiC,YACLlB,KAAKsC,MAAQhB,OAAO,gBAAgBa,MACpClD,KAAKP,aAAaiE,OAAO3C,MAAMD,UAAU,SAACC,MAChB,MAAdA,KAAKa,OACLrB,MAAKQ,KAAOA,KACZyC,MAAM,sCACNjD,MAAKV,OAAOY,UAAU,aAItBF,MAAKL,aAAea,KAAKa,MACzB4B,MAAMjD,MAAKL,gBAGnB,SAAC0B,OACGrB,MAAKL,aAAe0B,UAK5B5B,KAAKkC,YAAc,OACnBlC,KAAKiC,YAAa,IAQ1B1C,mBAAAc,UAAAsD,cAAA,SAAcC,OAAd,GAAArD,OAAAP,IACIA,MAAKP,aAAaoB,IAAIb,KAAKe,KAAK8C,IAAI/C,UAAU,SAACgD,SAC3CvD,MAAKwD,kBAAkBD,YAI/BvE,mBAAAc,UAAA0D,kBAAA,SAAkBD,SACVE,KAAKC,UAAUjE,KAAKe,QAAUiD,KAAKC,UAAUH,SAC7C9D,KAAKI,qBAAsB,EAE3BJ,KAAKI,qBAAsB,GA5HvCb,mBAAA2E,YAACC,OAAAC,WACGC,SAAU,aACVC,YAAa,4CACbC,WAAYC,gBAAAC,aAAcC,QAAAC,YAAaC,qBAAAC,kBAAmBC,gBAAAC,aAAcC,mBAAAC,wSAG5EC,UAAA,qBAAA3F","file":"color-edit.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Color } from \"../../Color/shared/color.model\";\nimport { ColorService } from \"../../Color/shared/color.service\";\nimport { Department } from \"../../Department/shared/department.model\";\nimport { DepartmentService } from \"../../Department/shared/department.service\";\nimport { Division } from \"../../Division/shared/division.model\";\nimport { DivisionService } from \"../../Division/shared/division.service\";\nimport { Brand } from \"../../Brand/shared/brand.model\";\nimport { BrandService } from \"../../Brand/shared/brand.service\";\nimport { AuthService } from \"../../auth.service\";\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\r\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"color-edit\",\n    templateUrl: \"app/Color/color/color-edit.component.html\",\n    providers: [ColorService, FormBuilder, DepartmentService, BrandService, DivisionService]\n})\n\nexport class ColorEditComponent {\n    data: Color;\n    title = \"Edit Color\";\n    colorForm: FormGroup;\n    errorMessage = null;\n    isDelete = false;\n    isFormValuesChanged = false;\n    oldData: Color;\n    depts: Department[];\n    brands: Brand[];\n    divisions: Division[];\n    searchModel: GeneralSearchModel;\r\n    paging: PaginationModel;\n    iseditting: boolean;\n    buttonvalue: string;\n    constructor(\n        private fb: FormBuilder,\n        private colorService: ColorService,\n        private divisionService: DivisionService,\n        private deptServcie: DepartmentService,\n        private brandService: BrandService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\n\n        var id =  this.activatedRoute.snapshot.params[\"id\"];\n        if (id) {\n            this.colorService.get(id).subscribe((data) => {\n                this.data = data;\n            });\n        }\n        else {\n            this.router.navigate([\"color/add\"]);\n        }\n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\r\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\n        var searchGeneralFilter = new SearchGeneralFilter(\"\", \"\", \"\", \"\");\n        this.brandService.getBrandList(this.searchModel).subscribe(items => this.brands = items.Data, error => this.errorMessage = <any>error);\n        this.deptServcie.getDepartmentList(this.searchModel).subscribe(items => this.depts = items.Data, error => this.errorMessage = <any>error);\n        this.divisionService.getDivisionList(this.searchModel).subscribe(items => this.divisions = items.Data, error => this.errorMessage = <any>error);\n        this.iseditting = false;\n        this.buttonvalue = \"Edit\";\n\n   \n    }\n\n    fileChangeEvent() {\n        this.isFormValuesChanged = true;\n        var fileUpload = jQuery(\"#files\").get(0);\r\n        var files = fileUpload.files;\r\n        var data = new FormData();\r\n        for (var i = 0; i < files.length; i++) {\r\n            data.append(files[i].name, files[i]);\r\n        }\r\n        jQuery.ajax({\r\n            type: \"POST\",\r\n            url: \"api/color/UploadImage\",\r\n            contentType: false,\r\n            processData: false,\r\n            data: data,\r\n            success: function (data) {\n                jQuery('#hdImagepath').val(data.UploadPath);\n                jQuery('#imgPreview').attr(\"src\", data.UploadPath);\n                this.data.Image = data.UploadPath;\n                jQuery('#lblinFo').append('File ' + data.FileName + ' size ' + data.Size + ' uploaded successfully');\r\n            },\r\n            error: function () {\r\n                alert(\"There was error uploading files!\");\r\n            }\r\n        });\r\n\n    }\n    onUpdate(data: Color) {\n        if (this.iseditting) {\n            data.Image = jQuery('#hdImagepath').val();\n            this.colorService.update(data).subscribe((data) => {\n                    if (data.error == null) {\n                        this.data = data;\n                        alert('Color details updated successfully');\n                        this.router.navigate([\"/color\"]);\n\n                    } else {\n                        // update failure\n                        this.errorMessage = data.error;\n                        alert(this.errorMessage);\n                    }\n                },\n                (error) => {\n                    this.errorMessage = error;\n\n                }\n            );\n        } else {\n            this.buttonvalue = \"Save\";\n            this.iseditting = true;\n        }\n    }\n\n\n  \n  \n\n    isFormChanged(value) {\n        this.colorService.get(this.data.Id).subscribe((oldData) => {\n            this.isFormDataChanged(oldData);\n        });\n    }\n\n    isFormDataChanged(oldData: Color) {\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\n            this.isFormValuesChanged = false;\n        else\n            this.isFormValuesChanged = true;\n    }\n}"]}