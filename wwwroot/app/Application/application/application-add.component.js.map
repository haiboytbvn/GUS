{"version":3,"sources":["Application/application/application-add.component.ts"],"names":["ApplicationAddComponent","fb","applicationService","router","authService","activatedRoute","this","errorMessage","prototype","ngOnInit","isLoggedIn","navigate","applicationForm","group","name","forms_1","Validators","required","isactive","buyercode","data","application_model_1","Application","title","ngAfterViewInit","jQuery","errorDiv","nativeElement","hide","ngOnDestroy","onSubmit","_this","application","add","subscribe","error","displayMessage","onBack","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","application_service_1","ApplicationService","FormBuilder","exports_1"],"mappings":"gzCAkDAA,wBAAA,WAOI,QAAAA,yBACYC,GACAC,mBACAC,OACAC,YACAC,gBAJAC,KAAAL,GAAAA,GACAK,KAAAJ,mBAAAA,mBACAI,KAAAH,OAAAA,OACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eARZC,KAAAC,aAAe,KA0EnB,MA/DIP,yBAAAQ,UAAAC,SAAA,WACSH,KAAKF,YAAYM,cAClBJ,KAAKH,OAAOQ,UAAU,KAG1BL,KAAKM,gBAAkBN,KAAKL,GAAGY,OAEvBC,MAAO,IACHC,QAAAC,WAAWC,WAEfC,WAAW,GACXC,WAAW,MAInBb,KAAKc,KAAO,GAAIC,qBAAAC,YAAY,GAAG,KAAK,MAAK,EAAM,IAAG,EAAM,IACxDhB,KAAKiB,MAAQ,mBAGjBvB,wBAAAQ,UAAAgB,gBAAA,WACIC,OAAOnB,KAAKoB,SAASC,eAAeC,QAGxC5B,wBAAAQ,UAAAqB,YAAA,WACIvB,KAAKJ,mBAAmBkB,KAAOd,KAAKc,MAGxCpB,wBAAAQ,UAAAsB,SAAA,SAASV,MAAT,GAAAW,OAAAzB,KACQ0B,YAAc,GAAIX,qBAAAC,YAAY,GAAI,KAAM,KAAMF,KAAKF,SAAUE,KAAKN,MAAM,EAAMM,KAAKD,UACvFb,MAAKJ,mBAAmB+B,IAAID,aAAaE,UAAU,SAACd,MAC1B,MAAdA,KAAKe,OACLJ,MAAKX,KAAOA,KACZW,MAAKxB,aAAe,mCACpBwB,MAAKK,eAAeL,MAAKxB,cAAc,KAIvCwB,MAAKxB,aAAea,KAAKe,MACzBJ,MAAKK,eAAeL,MAAKxB,cAAc,KAG3C,SAAC4B,OACGJ,MAAKxB,aAAe4B,MACpBJ,MAAKK,eAAeL,MAAKxB,cAAc,MAMvDP,wBAAAQ,UAAA6B,OAAA,WACI/B,KAAKH,OAAOQ,UAAU,iBAI1BX,wBAAAQ,UAAA4B,eAAA,SAAeE,QAAiBC,QAC5Bd,OAAOnB,KAAKoB,SAASC,eAAea,cACpClC,KAAKoB,SAASC,cAAcc,UAAYH,QAEpCC,OAAUd,OAAOnB,KAAKoB,SAASC,eAAee,SAAS,mBACpDjB,OAAOnB,KAAKoB,SAASC,eAAee,SAAS,iBAEpDjB,OAAOnB,KAAKoB,SAASC,eAAegB,UAAU,KAAMC,MAAM,KAAMC,QAAQ,MAvE5EC,YAACC,OAAAC,UAAU,8GA9CfhD,wBAAA8C,YAACC,OAAAE,WACGC,SAAU,kBACVC,SAAU,+qDAoCVC,WAAYC,sBAAAC,mBAAmBvC,QAAAwC,8MAGnCC,UAAA,0BAAAxD","file":"application-add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Application } from \"../../Application/shared/application.model\";\nimport { ApplicationService } from \"../../Application/shared/application.service\";\nimport { AuthService } from \"../../auth.service\";\n\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"application-add\",\n    template: `\n<div class=\"error-message\" #errorDiv></div>\n<div *ngIf=\"data\">\n    <h2>\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\n            &laquo; Back to Application List\n        </a>\n    </h2>\n  <div class=\"user-container\">    \n    <form class=\"form-user\" [formGroup]=\"applicationForm\" >\n        <h2 class=\"form-user-heading\">{{title}}</h2>\n        \n        <div class=\"form-group\">\n            <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Enter name\" value=\"this.data.Name\" autofocus />\n            <span class=\"validator-label valid\" *ngIf=\"this.applicationForm.controls.name.valid\">\n                <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\n                valid!\n            </span>\n        <div class=\"form-group\">\n            <input formControlName=\"buyercode\" type=\"text\" class=\"form-control\" placeholder=\"Enter buyer code\" value=\"this.data.BuyerCode\" autofocus />\n        </div> \n            <span class=\"validator-label invalid\" *ngIf=\"!this.applicationForm.controls.name.valid && !this.applicationForm.controls.name.pristine\">\n                <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                invalid\n            </span>\n        </div>  \n        <div class=\"form-group\">\n           Is Active? <input formControlName=\"isactive\" type=\"checkbox\" value=\"this.data.IsActive\" autofocus />     \n        </div>                    \n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!applicationForm.valid\" value=\"Add\" (click)=\"onSubmit(this.applicationForm.value)\" />\n        </div>       \n    </form>\n  </div>\n</div>\n`,\n    providers: [ApplicationService,FormBuilder]\n})\n\nexport class ApplicationAddComponent {\n    data: Application;\n    title: string;\n    applicationForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private applicationService: ApplicationService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n\n        this.applicationForm = this.fb.group(\n            {\n                name: [\"\", [\n                    Validators.required\n                ]], \n                isactive: [true],\n                buyercode:[\"\"]                                     \n            }\n        );\n\n        this.data = new Application(\"\",null,null,false,\"\",false,\"\");\n        this.title = \"New Application\";\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    ngOnDestroy() {\n        this.applicationService.data = this.data;\n    }\n\n    onSubmit(data: any) {\n        var application = new Application(\"\", null, null, data.isactive, data.name, false,data.buyercode);\n        this.applicationService.add(application).subscribe((data) => {\n                if (data.error == null) {\n                    this.data = data;\n                    this.errorMessage = 'Acessory Desc added successfully';\n                    this.displayMessage(this.errorMessage, true);\n                }\n                else {\n                    // update failure\n                    this.errorMessage = data.error;\n                    this.displayMessage(this.errorMessage, false);\n                }\n            },\n                (error) => {\n                    this.errorMessage = error;\n                    this.displayMessage(this.errorMessage, false);\n                }\n            );\n       \n    }\n\n    onBack() {\n        this.router.navigate([\"application\"]);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n}"]}