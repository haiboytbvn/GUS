{"version":3,"sources":["Season/season-list/season-list.component.ts"],"names":["SeasonListComponent","seasonService","authService","router","fb","acctypeService","this","title","pagesizearr","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","paging","pagination_model_1","PaginationModel","searchModel","generalsearch_model_1","GeneralSearchModel","getSeasonList","subscribe","items","ACdata","error","errorMessage","seasonAddForm","group","id","name","forms_1","Validators","required","isactive","data","season_model_1","Season","itemid","changePage","i","Paging","PageNumber","changeSize","PageSize","onSubmit","console","log","season","add","alert","jQuery","val","prop","modal","onAdd","onUpdate","update","onEdit","get","isFormChanged","value","Id","oldData","isFormDataChanged","JSON","stringify","__decorate","core_1","Component","selector","templateUrl","providers","season_service_1","SeasonService","FormBuilder","exports_1"],"mappings":"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","file":"season-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { SeasonService } from \"../shared/season.service\";\r\nimport { Season } from \"../shared/season.model\";\r\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\r\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\r\nimport { SeasonListModel } from \"../shared/season-list.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../auth.service\";\r\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: 'season',\r\n    templateUrl: 'app/Season/season-list/season-list.component.html',\r\n    providers: [SeasonService, SeasonService, FormBuilder]\r\n})\r\n\r\nexport class SeasonListComponent {\r\n    data: Season;\r\n    title = \"Season\";\r\n    selectedData: Season;\r\n    errorMessage: string;\r\n    searchModel: GeneralSearchModel;\r\n    paging: PaginationModel;\r\n    seasonAddForm: FormGroup;\r\n    accessorycategories: Season[];\r\n    ACdata: SeasonListModel;\r\n    pagesizearr: number[] = [10, 20, 30, 0];\r\n    types: Season[];\r\n    itemid: string;\r\n    isFormValuesChanged = false;\r\n    seasonEditForm: FormGroup;\r\n    constructor(private seasonService: SeasonService,\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private fb: FormBuilder,\r\n        private acctypeService: SeasonService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\r\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\r\n        this.seasonService.getSeasonList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n        this.seasonAddForm = this.fb.group(\r\n            {\r\n                id: [\"\"],\r\n                name: [\"\", [Validators.required]],\r\n                isactive: [true]\r\n            }\r\n        );\r\n        this.data = new Season(\"\", false, \"\");\r\n        this.itemid = \"\";\r\n    }\r\n    changePage(i: number) {\r\n        this.searchModel.Paging.PageNumber = i;\r\n        this.seasonService.getSeasonList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    changeSize(i: number) {\r\n        if (i == 0) {\r\n            this.searchModel.Paging.PageNumber = 0;\r\n        } else {\r\n            this.searchModel.Paging.PageSize = i;\r\n            this.searchModel.Paging.PageNumber = 1;\r\n        }\r\n\r\n        this.seasonService.getSeasonList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    onSubmit(data: any) {\r\n        console.log(data);\r\n        var season = new Season(\"\", data.isactive, data.name);\r\n        this.seasonService.add(season).subscribe((data) => {\r\n            if (data.error == null) {\r\n\r\n\r\n                this.seasonService.getSeasonList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n                alert(\"added successfully\");\r\n                this.data = new Season(\"\", false, \"\");\r\n                jQuery('#txtName').val('');\r\n                jQuery('#ckIsActive').prop('checked', true);\r\n            } else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                alert(this.errorMessage);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                alert(this.errorMessage);\r\n            }\r\n        );\r\n        jQuery('#myModalAdd').modal('hide');\r\n\r\n\r\n\r\n    }\r\n    onAdd() {\r\n        jQuery('#txtName').val('');\r\n        jQuery('#ckIsActive').prop('checked', true);\r\n    }\r\n    onUpdate(data: any) {\r\n        // else, update it\r\n        // var season = new Season(data.id, null, null, data.isactive, data.name, false, data.buyercode, data.acctype);\r\n        console.log(data);\r\n        this.seasonService.update(data).subscribe((data) => {\r\n            if (data.error == null) {\r\n                this.data = data;\r\n                this.seasonService.getSeasonList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n                alert(\"updated successfully\");\r\n                jQuery('#myModalEdit').modal('hide');\r\n                this.itemid == \"\";\r\n            }\r\n            else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                alert(this.errorMessage);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                alert(this.errorMessage);\r\n            }\r\n        );\r\n    }\r\n    onEdit(id: string) {\r\n        this.itemid = id;\r\n        if (id !== \"\") {\r\n            this.seasonService.get(id).subscribe((data) => {\r\n                this.data = data;\r\n            });\r\n        }\r\n    }\r\n    isFormChanged(value) {\r\n        this.seasonService.get(this.data.Id).subscribe((oldData) => {\r\n            this.isFormDataChanged(oldData);\r\n        });\r\n    }\r\n\r\n    isFormDataChanged(oldData: Season) {\r\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\r\n            this.isFormValuesChanged = false;\r\n        else\r\n            this.isFormValuesChanged = true;\r\n    }\r\n}"]}