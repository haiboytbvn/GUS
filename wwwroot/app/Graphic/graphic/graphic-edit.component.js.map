{"version":3,"sources":["Graphic/graphic/graphic-edit.component.ts"],"names":["GraphicEditComponent","fb","graphicService","categoryService","productnameService","graphictypeService","brandService","deptService","divisionService","colorService","router","authService","activatedRoute","this","title","errorMessage","isDelete","isFormValuesChanged","prototype","changeType","id","_this","disableCategory","disableProductName","getGraphicCategoryListByType","subscribe","items","categories","error","changeCategory","getGraphicProductNameByCategory","productnames","fileChangeEvent","fileUpload","jQuery","get","files","data","FormData","i","length","append","name","ajax","type","url","contentType","processData","success","prop","UploadPath","mainimage","imagepath","appendstring","val","html","Image","alert","ngOnInit","isLoggedIn","navigate","snapshot","params","paging","pagination_model_1","PaginationModel","searchModel","generalsearch_model_1","GeneralSearchModel","pageall","getAll","getGraphicCategoryList","Data","getGraphicProductNameList","getGraphicTypeList","types","getBrandList","brands","getDepartmentList","departments","getDivisionList","divisions","getColorList","colors","iseditting","buttonvalue","onUpdate","update","isFormChanged","value","Id","oldData","isFormDataChanged","changeImage","path","console","log","JSON","stringify","__decorate","core_1","Component","selector","templateUrl","providers","graphic_service_1","GraphicService","forms_1","FormBuilder","graphiccategory_service_1","GraphicCategoryService","graphicproductname_service_1","GraphicProductNameService","brand_service_1","BrandService","graphictype_service_1","GraphicTypeService","department_service_1","DepartmentService","division_service_1","DivisionService","color_service_1","ColorService","exports_1"],"mappings":"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","file":"graphic-edit.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport {Graphic } from \"../../Graphic/shared/graphic.model\";\nimport {GraphicService } from \"../../Graphic/shared/graphic.service\";\n\nimport {GraphicCategory } from \"../../GraphicCategory/shared/graphiccategory.model\";\nimport {GraphicCategoryService } from \"../../GraphicCategory/shared/graphiccategory.service\";\n\nimport {GraphicProductName } from \"../../GraphicProductName/shared/graphicproductname.model\";\nimport {GraphicProductNameService } from \"../../GraphicProductName/shared/graphicproductname.service\";\n\nimport { Color } from \"../../Color/shared/color.model\";\nimport { ColorService } from \"../../Color/shared/color.service\";\nimport { ColorSearchModel } from \"../../Color/shared/color-search.model\";\n\nimport {GraphicType } from \"../../GraphicType/shared/graphictype.model\";\nimport {GraphicTypeService } from \"../../GraphicType/shared/graphictype.service\";\n\n\nimport { Department } from \"../../Department/shared/department.model\";\nimport { DepartmentService } from \"../../Department/shared/department.service\";\nimport { Division } from \"../../Division/shared/division.model\";\nimport { DivisionService } from \"../../Division/shared/division.service\";\nimport { Brand } from \"../../Brand/shared/brand.model\";\nimport { BrandService } from \"../../Brand/shared/brand.service\";\nimport { AuthService } from \"../../auth.service\";\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"graphic-edit\",\n    templateUrl: \"app/Graphic/graphic/graphic-edit.component.html\",\n    providers: [GraphicService, FormBuilder,GraphicCategoryService,GraphicProductNameService, BrandService,GraphicTypeService, DepartmentService, DivisionService, ColorService]\n})\n\nexport class GraphicEditComponent {\n    data:Graphic;\n    title = \"Edit Graphic\";\n    graphicForm: FormGroup;\n    errorMessage = null;\n    isDelete = false;\n    isFormValuesChanged = false;\n    oldData:Graphic;\n    categories:GraphicCategory[];\n    productnames:GraphicProductName[];\n    types:GraphicType[];\n    brands: Brand[];\n    departments: Department[];\n    divisions: Division[];\n\n    colors: Color[];\n    searchModel: GeneralSearchModel;\n    paging: PaginationModel;\n    iseditting: boolean;\n    buttonvalue: string;\n    disableProductName: boolean;\n    disableCategory: boolean;\n    constructor(\n        private fb: FormBuilder,\n        private graphicService:GraphicService,\n        private categoryService:GraphicCategoryService,\n        private productnameService:GraphicProductNameService,\n        private graphictypeService:GraphicTypeService,\n        private brandService: BrandService,\n        private deptService: DepartmentService,\n        private divisionService: DivisionService,\n        private colorService: ColorService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n    changeType(id: string) {\n      \n        if (id === \"\") {\n\n            this.disableCategory = true;\n            this.disableProductName = true;\n        } else {\n\n            this.disableCategory = false;\n            this.categoryService.getGraphicCategoryListByType(id).subscribe(items => this.categories = items, error => this.errorMessage = <any>error);\n        }\n    }\n    changeCategory(id: string) {\n        if (id === \"\") {\n\n            this.disableProductName = true;\n        } else {\n            this.disableProductName = false;\n            this.productnameService.getGraphicProductNameByCategory(id).subscribe(items => this.productnames = items, error => this.errorMessage = <any>error);\n        }\n\n    }\n    fileChangeEvent() {\n\n        var fileUpload = jQuery(\"#files\").get(0);\n        var files = fileUpload.files;\n        var data = new FormData();\n        for (var i = 0; i < files.length; i++) {\n            data.append(files[i].name, files[i]);\n        }\n        jQuery.ajax({\n            type: \"POST\",\n            url: \"api/graphic/UploadImage\",\n            contentType: false,\n            processData: false,\n            data: data,\n            success: function (data) {\n                jQuery('#imgPreview').prop(\"src\", data[0].UploadPath);\n                this.mainimage = data[0].UploadPath;\n                var imagepath = \"\";\n                var appendstring = \"\";\n                for (var i = 0; i < data.length; i++) {\n\n                    imagepath += data[i].UploadPath + \"|\";\n                    appendstring += \"<li><a href=\\\"javascript:void(0);\\\" [(click)]=\\\"changeImage(\" + data[i].UploadPath + \")\\\"><img src=\\\"\" + data[i].UploadPath + \"\\\" alt=\\\"graphic image\\\"></a></li>\"\n                    // this.listimages.push(data[i].UploadPath);\n                }\n                jQuery('#hdImage').val(imagepath);\n                jQuery('#imagecontainer').html('');\n                jQuery('#imagecontainer').html(appendstring);\n                this.data.Image = imagepath;\n            },\n            error: function () {\n                alert(\"There was error uploading files!\");\n            }\n        });\n\n    }\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        this.disableCategory = true;\n        this.disableProductName = true;\n        var id = this.activatedRoute.snapshot.params[\"id\"];\n        if (id) {\n            this.graphicService.get(id).subscribe((data) => {\n                this.data = data;\n            });\n        }\n        else {\n            this.router.navigate([\"graphic/add\"]);\n        }\n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\n        var pageall = new PaginationModel(10, 0, \"Name\", 0, [], 0);\n        var getAll = new GeneralSearchModel(\"\", \"\", \"\", \"\", pageall);\n        this.categoryService.getGraphicCategoryList(getAll).subscribe(items => this.categories = items.Data, error => this.errorMessage = <any>error);\n        this.productnameService.getGraphicProductNameList(getAll).subscribe(items => this.productnames = items.Data, error => this.errorMessage = <any>error);\n        this.graphictypeService.getGraphicTypeList(getAll).subscribe(items => this.types = items.Data, error => this.errorMessage = <any>error);\n        this.brandService.getBrandList(getAll).subscribe(items => this.brands = items.Data, error => this.errorMessage = <any>error);\n        this.deptService.getDepartmentList(getAll).subscribe(items => this.departments = items.Data, error => this.errorMessage = <any>error);\n        this.divisionService.getDivisionList(getAll).subscribe(items => this.divisions = items.Data, error => this.errorMessage = <any>error);\n        this.colorService.getColorList(getAll).subscribe(items => this.colors = items.Data, error => this.errorMessage = <any>error);\n        this.title = \"Edit Graphic\";\n        this.iseditting = false;\n        this.buttonvalue = \"Edit\";\n    }\n\n    onUpdate(data:Graphic) {\n\n        if (this.iseditting) {\n            data.Image = jQuery('#hdImagepath').val();\n            this.graphicService.update(data).subscribe((data) => {\n                if (data.error == null) {\n                    this.data = data;\n                    alert('Accessorie details updated successfully');\n                    this.router.navigate([\"/graphic\"]);\n                } else {\n                    // update failure\n                    this.errorMessage = data.error;\n                    alert(this.errorMessage);\n                }\n            },\n                (error) => {\n                    this.errorMessage = error;\n\n                }\n            );\n        } else {\n            this.buttonvalue = \"Save\";\n            this.iseditting = true;\n        }\n    }\n\n    isFormChanged(value) {\n        this.graphicService.get(this.data.Id).subscribe((oldData) => {\n            this.isFormDataChanged(oldData);\n        });\n    }\n    changeImage(path: string) {\n        jQuery('#imgPreview').prop(\"src\", path);\n    }\n    isFormDataChanged(oldData:Graphic) {\n        console.log(this.data);\n        console.log(oldData);\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\n            this.isFormValuesChanged = false;\n        else\n            this.isFormValuesChanged = true;\n    }\n}"]}