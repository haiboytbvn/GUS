{"version":3,"sources":["Graphic/graphic/graphic-add.component.ts"],"names":["GraphicAddComponent","fb","graphicService","categoryService","graphicproductnameService","acctypeService","brandService","deptService","divisionService","colorService","router","authService","activatedRoute","this","errorMessage","prototype","changeType","id","_this","disableCategory","disableProductName","getGraphicCategoryListByType","subscribe","items","categories","error","changeCategory","getGraphicProductNameByCategory","productnames","doUpload","jQuery","trigger","ngOnInit","isLoggedIn","navigate","listimages","mainimage","graphicForm","group","buyercode","isactive","graphiccategory","forms_1","Validators","required","productname","graphictype","itemsize","supplier","suppliercode","description","brand","division","remark","department","color","pageall","pagination_model_1","PaginationModel","getAll","generalsearch_model_1","GeneralSearchModel","getGraphicCategoryList","Data","getGraphicProductNameList","getGraphicTypeList","types","getBrandList","brands","getDepartmentList","departments","getDivisionList","divisions","getColorList","colors","data","graphic_model_1","Graphic","title","fileChangeEvent","fileUpload","get","files","FormData","i","length","append","name","ajax","type","url","contentType","processData","success","prop","UploadPath","imagepath","appendstring","val","html","Image","alert","changeImage","path","onSubmit","newData","add","__decorate","core_1","ViewChild","Component","selector","templateUrl","providers","graphic_service_1","GraphicService","FormBuilder","graphiccategory_service_1","GraphicCategoryService","graphicproductname_service_1","GraphicProductNameService","brand_service_1","BrandService","graphictype_service_1","GraphicTypeService","department_service_1","DepartmentService","division_service_1","DivisionService","color_service_1","ColorService","exports_1"],"mappings":"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","file":"graphic-add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Graphic } from \"../../Graphic/shared/graphic.model\";\nimport { GraphicService } from \"../../Graphic/shared/graphic.service\";\n\nimport { GraphicCategory } from \"../../GraphicCategory/shared/graphiccategory.model\";\nimport { GraphicCategoryService } from \"../../GraphicCategory/shared/graphiccategory.service\";\n\nimport { GraphicProductName } from \"../../GraphicProductName/shared/graphicproductname.model\";\nimport { GraphicProductNameService } from \"../../GraphicProductName/shared/graphicproductname.service\";\n\nimport { Color } from \"../../Color/shared/color.model\";\nimport { ColorService } from \"../../Color/shared/color.service\";\nimport { ColorSearchModel } from \"../../Color/shared/color-search.model\";\n\nimport { GraphicType } from \"../../GraphicType/shared/graphictype.model\";\nimport { GraphicTypeService } from \"../../GraphicType/shared/graphictype.service\";\n\nimport { Department } from \"../../Department/shared/department.model\";\nimport { DepartmentService } from \"../../Department/shared/department.service\";\nimport { Division } from \"../../Division/shared/division.model\";\nimport { DivisionService } from \"../../Division/shared/division.service\";\nimport { Brand } from \"../../Brand/shared/brand.model\";\nimport { BrandService } from \"../../Brand/shared/brand.service\";\nimport { AuthService } from \"../../auth.service\";\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"graphic-add\",\n    templateUrl: 'app/Graphic/graphic/graphic-add.component.html',\n    providers: [GraphicService, FormBuilder, GraphicCategoryService, GraphicProductNameService, BrandService, GraphicTypeService, DepartmentService, DivisionService, ColorService]\n})\n\nexport class GraphicAddComponent {\n    data: Graphic;\n    title: string;\n    graphicForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n    categories: GraphicCategory[];\n    productnames: GraphicProductName[];\n    types: GraphicType[];\n    brands: Brand[];\n    departments: Department[];\n    divisions: Division[];\n    colors: Color[];\n    disableProductName: boolean;\n    disableCategory: boolean;\n    listimages: string[];\n    mainimage: string;\n\n    constructor(\n        private fb: FormBuilder,\n        private graphicService: GraphicService,\n        private categoryService: GraphicCategoryService,\n        private graphicproductnameService: GraphicProductNameService,\n        private acctypeService: GraphicTypeService,\n        private brandService: BrandService,\n        private deptService: DepartmentService,\n        private divisionService: DivisionService,\n        private colorService: ColorService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n    changeType(id: string) {\n        if (id === \"\") {\n\n            this.disableCategory = true;\n            this.disableProductName = true;\n        } else {\n\n            this.disableCategory = false;\n            this.categoryService.getGraphicCategoryListByType(id).subscribe(items => this.categories = items, error => this.errorMessage = <any>error);\n        }\n\n\n    }\n    changeCategory(id: string) {\n        if (id === \"\") {\n\n            this.disableProductName = true;\n        } else {\n            this.disableProductName = false;\n            this.graphicproductnameService.getGraphicProductNameByCategory(id).subscribe(items => this.productnames = items, error => this.errorMessage = <any>error);\n        }\n\n    }\n    doUpload() {\n        jQuery(\"#files\").trigger(\"click\");\n    }\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        this.disableCategory = true;\n        this.disableProductName = true;\n\n        this.listimages = [];\n        this.mainimage = \"\";\n        this.graphicForm = this.fb.group(\n            {\n                buyercode: [\"\"],\n                isactive: [true],\n                graphiccategory: [\"\", [Validators.required]],\n                productname: [\"\", [Validators.required]],\n                graphictype: [\"\", [Validators.required]],\n                itemsize: [\"\"],\n                supplier: [\"\"],\n                suppliercode: [\"\"],\n                description: [\"\"],\n                brand: [\"\", [Validators.required]],\n                division: [\"\", [Validators.required]],\n                remark: [\"\"],\n                department: [\"\", [Validators.required]],\n                color: [\"\", [Validators.required]]\n\n\n            }\n        );\n        var pageall = new PaginationModel(10, 0, \"Name\", 0, [], 0);\n        var getAll = new GeneralSearchModel(\"\", \"\", \"\", \"\", pageall);\n\n        this.categoryService.getGraphicCategoryList(getAll).subscribe(items => this.categories = items.Data, error => this.errorMessage = <any>error);\n        this.graphicproductnameService.getGraphicProductNameList(getAll).subscribe(items => this.productnames = items.Data, error => this.errorMessage = <any>error);\n        this.acctypeService.getGraphicTypeList(getAll).subscribe(items => this.types = items.Data, error => this.errorMessage = <any>error);\n        this.brandService.getBrandList(getAll).subscribe(items => this.brands = items.Data, error => this.errorMessage = <any>error);\n        this.deptService.getDepartmentList(getAll).subscribe(items => this.departments = items.Data, error => this.errorMessage = <any>error);\n        this.divisionService.getDivisionList(getAll).subscribe(items => this.divisions = items.Data, error => this.errorMessage = <any>error);\n        this.colorService.getColorList(getAll).subscribe(items => this.colors = items.Data, error => this.errorMessage = <any>error);\n        this.data = new Graphic(\"\", false, \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], \"\");\n        this.title = \"New Graphic\";\n    }\n\n\n    fileChangeEvent() {\n\n        var fileUpload = jQuery(\"#files\").get(0);\n        var files = fileUpload.files;\n        var data = new FormData();\n        for (var i = 0; i < files.length; i++) {\n            data.append(files[i].name, files[i]);\n        }\n        jQuery.ajax({\n            type: \"POST\",\n            url: \"api/graphic/UploadImage\",\n            contentType: false,\n            processData: false,\n            data: data,\n            success: function (data) {\n                jQuery('#imgPreview').prop(\"src\", data[0].UploadPath);\n                this.mainimage = data[0].UploadPath;\n                var imagepath = \"\";\n                var appendstring = \"\";\n                for (var i = 0; i < data.length; i++) {\n\n                    imagepath += data[i].UploadPath + \"|\";\n                    appendstring += \"<li><a href=\\\"javascript:void(0);\\\" [(click)]=\\\"changeImage(\" + data[i].UploadPath + \")\\\"><img src=\\\"\" + data[i].UploadPath + \"\\\" alt=\\\"graphic image\\\"></a></li>\"\n                    // this.listimages.push(data[i].UploadPath);\n                }\n                jQuery('#hdImage').val(imagepath);\n                jQuery('#imagecontainer').html('');\n                jQuery('#imagecontainer').html(appendstring);\n                this.data.Image = imagepath;\n            },\n            error: function () {\n                alert(\"There was error uploading files!\");\n            }\n        });\n\n    }\n    changeImage(path: string) {\n        alert(path);\n    }\n    onSubmit(data: any) {\n        var newData = new Graphic(\"\", data.isactive, data.buyercode, data.brand, data.department, data.division, jQuery('#hdImage').val(), data.productname, data.graphictype,\n            data.graphiccategory, data.description,data.itemsize,data.supplier,data.suppliercode,data.remark,data.color,[],\"\")\n        this.graphicService.add(newData).subscribe((data) => {\n            if (data.error == null) {\n                this.data = data;\n                alert(\"Added successfully!\");\n                this.router.navigate([\"/graphic\"]);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                alert(this.errorMessage);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n\n            }\n        );\n\n    }\n\n\n\n\n}"]}