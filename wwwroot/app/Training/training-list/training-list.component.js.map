{"version":3,"sources":["Training/training-list/training-list.component.ts"],"names":["TrainingListComponent","trainingService","authService","router","fb","acctypeService","brandService","trainingItemService","relTrainingTrainingTtemService","this","title","pagesizearr","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","items","trainingItems","paging","pagination_model_1","PaginationModel","searchModel","generalsearch_model_1","GeneralSearchModel","getTrainingList","subscribe","ACdata","error","errorMessage","getBrandList","brands","Data","trainingAddForm","group","id","name","forms_1","Validators","required","age","isactive","isselected","data","training_model_1","Training","itemid","reltrainingtrainingitems","Array","changePage","i","Paging","PageNumber","changeSize","PageSize","onSubmit","training","add","alert","jQuery","val","prop","modal","onAdd","getTrainingItemListForModal","trainingitems","onUpdate","Items","update","onEdit","get","length","push","console","log","IsIntheList","isFormChanged","value","Id","oldData","isFormDataChanged","onChangeItem","e","target","checked","splice","JSON","stringify","changeItemSelect","onChange","k","__decorate","core_1","Component","selector","templateUrl","providers","training_service_1","TrainingService","FormBuilder","brand_service_1","BrandService","trainingitem_service_1","TrainingItemService","reltrainingtrainingitem_service_1","RelTrainingTrainingItemService","exports_1"],"mappings":"y/DAwBAA,sBAAA,WAoBI,QAAAA,uBACYC,gBACAC,YACAC,OACAC,GACAC,eACAC,aACAC,oBACAC,gCAPAC,KAAAR,gBAAAA,gBACAQ,KAAAP,YAAAA,YACAO,KAAAN,OAAAA,OACAM,KAAAL,GAAAA,GACAK,KAAAJ,eAAAA,eACAI,KAAAH,aAAAA,aACAG,KAAAF,oBAAAA,oBACAE,KAAAD,+BAAAA,+BA1BZC,KAAAC,MAAQ,WAQRD,KAAAE,aAAyB,GAAI,GAAI,GAAI,GAGrCF,KAAAG,qBAAsB,EAsM1B,MAnLIZ,uBAAAa,UAAAC,SAAA,WAAA,GAAAC,OAAAN,IACSA,MAAKP,YAAYc,cAClBP,KAAKN,OAAOc,UAAU,KAE1BR,KAAKS,SACLT,KAAKU,iBACLV,KAAKW,OAAS,GAAIC,oBAAAC,gBAAgB,GAAI,EAAG,OAAQ,KAAO,GACxDb,KAAKc,YAAc,GAAIC,uBAAAC,mBAAmB,GAAI,GAAI,GAAI,GAAIhB,KAAKW,QAC/DX,KAAKR,gBAAgByB,gBAAgBjB,KAAKc,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKa,OAASV,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,QACjIpB,KAAKH,aAAayB,aAAatB,KAAKc,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKiB,OAASd,MAAMe,MAAM,SAAAJ,OAAS,MAAAd,OAAKe,aAAoBD,QAChIpB,KAAKyB,gBAAkBzB,KAAKL,GAAG+B,OAEvBC,IAAK,IACLC,MAAO,IAAKC,QAAAC,WAAWC,WACvBC,KAAM,IAAKH,QAAAC,WAAWC,WACtBE,WAAW,GACXC,aAAa,KAGrBlC,KAAKmC,KAAO,GAAIC,kBAAAC,SAAS,IAAI,EAAO,GAAI,OACxCrC,KAAKsC,OAAS,GACdtC,KAAKuC,yBAA2B,GAAIC,QAExCjD,sBAAAa,UAAAqC,WAAA,SAAWC,GAAX,GAAApC,OAAAN,IACIA,MAAKc,YAAY6B,OAAOC,WAAaF,EACrC1C,KAAKR,gBAAgByB,gBAAgBjB,KAAKc,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKa,OAASV,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,SAGrI7B,sBAAAa,UAAAyC,WAAA,SAAWH,GAAX,GAAApC,OAAAN,IACa,IAAL0C,EACA1C,KAAKc,YAAY6B,OAAOC,WAAa,GAErC5C,KAAKc,YAAY6B,OAAOG,SAAWJ,EACnC1C,KAAKc,YAAY6B,OAAOC,WAAa,GAGzC5C,KAAKR,gBAAgByB,gBAAgBjB,KAAKc,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKa,OAASV,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,SAGrI7B,sBAAAa,UAAA2C,SAAA,SAASZ,MAAT,GAAA7B,OAAAN,KAKQgD,SAAW,GAAIZ,kBAAAC,SAAS,GAAIF,KAAKF,SAAUE,KAAKP,KAAMO,KAAKH,IAAKhC,KAAKU,cACzEV,MAAKR,gBAAgByD,IAAID,UAAU9B,UAAU,SAACiB,MACxB,MAAdA,KAAKf,OAELd,MAAKd,gBAAgByB,gBAAgBX,MAAKQ,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKa,OAASV,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,QACjI8B,MAAM,sBAEN5C,MAAK6B,KAAO,GAAIC,kBAAAC,SAAS,IAAI,EAAO,GAAI,OACxCc,OAAO,YAAYC,IAAI,IACvBD,OAAO,eAAeE,KAAK,WAAW,KAItC/C,MAAKe,aAAec,KAAKf,MACzB8B,MAAM5C,MAAKe,gBAGf,SAACD,OACGd,MAAKe,aAAeD,MACpB8B,MAAM5C,MAAKe,gBAGnB8B,OAAO,eAAeG,MAAM,SAKhC/D,sBAAAa,UAAAmD,MAAA,WAAA,GAAAjD,OAAAN,IACImD,QAAO,YAAYC,IAAI,IACvBD,OAAO,WAAWC,IAAI,IACtBD,OAAO,eAAeE,KAAK,WAAW,GACtCrD,KAAKF,oBAAoB0D,4BAA4BxD,KAAKc,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKmD,cAAgBhD,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,QACxJpB,KAAKU,kBAETnB,sBAAAa,UAAAsD,SAAA,SAASvB,MAAT,GAAA7B,OAAAN,IAEIA,MAAKmC,KAAKwB,MAAQ3D,KAAKU,cACvBV,KAAKR,gBAAgBoE,OAAO5D,KAAKmC,MAAMjB,UAAU,SAACiB,MAC5B,MAAdA,KAAKf,OACLd,MAAK6B,KAAOA,KACZ7B,MAAKd,gBAAgByB,gBAAgBX,MAAKQ,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKa,OAASV,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,QACjI8B,MAAM,wBACNC,OAAO,gBAAgBG,MAAM,QAC7BhD,MAAKgC,SAILhC,MAAKe,aAAec,KAAKf,MACzB8B,MAAM5C,MAAKe,gBAGf,SAACD,OACGd,MAAKe,aAAeD,MACpB8B,MAAM5C,MAAKe,iBAIvB9B,sBAAAa,UAAAyD,OAAA,SAAOlC,IAAP,GAAArB,OAAAN,IAGIA,MAAKU,iBACLV,KAAKsC,OAASX,GACH,KAAPA,KACA3B,KAAKR,gBAAgBsE,IAAInC,IAAIT,UAAU,SAACiB,MACpC7B,MAAK6B,KAAOA,IACZ,KAAK,GAAIO,GAAI,EAAGA,EAAIP,KAAKwB,MAAMI,OAAQrB,IACnCpC,MAAKI,cAAcsD,KAAK7B,KAAKwB,MAAMjB,MAG3C1C,KAAKF,oBAAoB0D,4BAA4BxD,KAAKc,aAAaI,UAAU,SAAAT,OAAS,MAAAH,OAAKmD,cAAgBhD,OAAO,SAAAW,OAAS,MAAAd,OAAKe,aAAoBD,QACxJ6C,QAAQC,IAAIlE,KAAKmC,KAAKwB,SAS9BpE,sBAAAa,UAAA+D,YAAA,SAAYxC,IACR,IAAK,GAAIe,GAAI,EAAGA,EAAI1C,KAAKU,cAAcqD,OAAQrB,IAC3C,GAAI1C,KAAKU,cAAcgC,KAAOf,GAC1B,OAAO,CAGf,QAAO,GAYXpC,sBAAAa,UAAAgE,cAAA,SAAcC,OAAd,GAAA/D,OAAAN,IACIA,MAAKR,gBAAgBsE,IAAI9D,KAAKmC,KAAKmC,IAAIpD,UAAU,SAACqD,SAC9CjE,MAAKkE,kBAAkBD,YAG/BhF,sBAAAa,UAAAqE,aAAA,SAAaC,EAAQ/C,IAEjB,GADA3B,KAAKG,qBAAsB,EACvBuE,EAAEC,OAAOC,QACT5E,KAAKU,cAAcsD,KAAKrC,IACxBsC,QAAQC,IAAIlE,KAAKU,mBAGjB,KAAK,GAAIgC,GAAI,EAAGA,EAAI1C,KAAKU,cAAcqD,OAAQrB,IACvC1C,KAAKU,cAAcgC,KAAOf,IAC1B3B,KAAKU,cAAcmE,OAAOnC,EAAG,IAM7CnD,sBAAAa,UAAAoE,kBAAA,SAAkBD,SACVO,KAAKC,UAAU/E,KAAKmC,QAAU2C,KAAKC,UAAUR,SAC7CvE,KAAKG,qBAAsB,EAE3BH,KAAKG,qBAAsB,GAEnCZ,sBAAAa,UAAA4E,iBAAA,SAAiBX,OACbJ,QAAQC,IAAIG,QAGhB9E,sBAAAa,UAAA6E,SAAA,SAASC,GACD/B,OAAO,YAAc+B,GAAG7B,KAAK,WAC7BF,OAAO,YAAc+B,GAAG7B,KAAK,WAAW,GAGxCF,OAAO,YAAc+B,GAAG7B,KAAK,WAAW,IAtNpD9D,sBAAA4F,YAACC,OAAAC,WACGC,SAAU,WACVC,YAAa,0DACbC,WAAYC,mBAAAC,gBAAiB7D,QAAA8D,YAAaC,gBAAAC,aAAcC,uBAAAC,oBAAqBC,kCAAAC,6WAGjFC,UAAA,wBAAA3G","file":"training-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { TrainingService } from \"../shared/training.service\";\r\nimport { Training } from \"../shared/training.model\";\r\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\r\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\r\nimport { TrainingListModel } from \"../shared/training-list.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../auth.service\";\r\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\r\nimport { Brand } from \"../../Brand/shared/brand.model\";\r\nimport { BrandService } from \"../../Brand/shared/brand.service\";\r\nimport { TrainingItem } from \"../../TrainingItem/shared/trainingitem.model\";\r\nimport { TrainingItemService } from \"../../TrainingItem/shared/trainingitem.service\";\r\nimport { RelTrainingTrainingItem } from \"../../RelTrainingTrainingItem/shared/reltrainingtrainingitem.model\";\r\nimport { RelTrainingTrainingItemService } from \"../../RelTrainingTrainingItem/shared/reltrainingtrainingitem.service\";\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: 'training',\r\n    templateUrl: 'app/Training/training-list/training-list.component.html',\r\n    providers: [TrainingService, FormBuilder, BrandService, TrainingItemService, RelTrainingTrainingItemService]\r\n})\r\n\r\nexport class TrainingListComponent {\r\n    data: Training;\r\n    title = \"Training\";\r\n    selectedData: Training;\r\n    errorMessage: string;\r\n    searchModel: GeneralSearchModel;\r\n    paging: PaginationModel;\r\n    trainingAddForm: FormGroup;\r\n    accessorycategories: Training[];\r\n    ACdata: TrainingListModel;\r\n    pagesizearr: number[] = [10, 20, 30, 0];\r\n    types: Training[];\r\n    itemid: string;\r\n    isFormValuesChanged = false;\r\n    trainingEditForm: FormGroup;\r\n    brands: Brand[];\r\n    trainingitems: TrainingItem[];\r\n    reltrainingtrainingitems: RelTrainingTrainingItem[];\r\n    items: string[];\r\n    trainingItems: string[];\r\n    constructor(\r\n        private trainingService: TrainingService,\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private fb: FormBuilder,\r\n        private acctypeService: TrainingService,\r\n        private brandService: BrandService,\r\n        private trainingItemService: TrainingItemService,\r\n        private relTrainingTrainingTtemService: RelTrainingTrainingItemService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.items = [];\r\n        this.trainingItems = [];\r\n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\r\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\r\n        this.trainingService.getTrainingList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n        this.brandService.getBrandList(this.searchModel).subscribe(items => this.brands = items.Data, error => this.errorMessage = <any>error);\r\n        this.trainingAddForm = this.fb.group(\r\n            {\r\n                id: [\"\"],\r\n                name: [\"\", [Validators.required]],\r\n                age: [\"\", [Validators.required]],\r\n                isactive: [true],\r\n                isselected: [false]\r\n            }\r\n        );\r\n        this.data = new Training(\"\", false, \"\", \"\",[]);\r\n        this.itemid = \"\";\r\n        this.reltrainingtrainingitems = new Array<RelTrainingTrainingItem>();\r\n    }\r\n    changePage(i: number) {\r\n        this.searchModel.Paging.PageNumber = i;\r\n        this.trainingService.getTrainingList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    changeSize(i: number) {\r\n        if (i == 0) {\r\n            this.searchModel.Paging.PageNumber = 0;\r\n        } else {\r\n            this.searchModel.Paging.PageSize = i;\r\n            this.searchModel.Paging.PageNumber = 1;\r\n        }\r\n\r\n        this.trainingService.getTrainingList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    onSubmit(data: any) {\r\n     // get items id arry\r\n       \r\n        \r\n\r\n        var training = new Training(\"\", data.isactive, data.name, data.age, this.trainingItems);\r\n        this.trainingService.add(training).subscribe((data) => {\r\n            if (data.error == null) {\r\n                       \r\n                this.trainingService.getTrainingList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n                alert(\"added successfully\");\r\n                \r\n                this.data = new Training(\"\", false, \"\", \"\",[]);\r\n                jQuery('#txtName').val('');\r\n                jQuery('#ckIsActive').prop('checked', true);\r\n                \r\n            } else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                alert(this.errorMessage);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                alert(this.errorMessage);\r\n            }\r\n        );\r\n        jQuery('#myModalAdd').modal('hide');\r\n\r\n\r\n\r\n    }\r\n    onAdd() {\r\n        jQuery('#txtName').val('');\r\n        jQuery('#txtAge').val('');\r\n        jQuery('#ckIsActive').prop('checked', true);\r\n        this.trainingItemService.getTrainingItemListForModal(this.searchModel).subscribe(items => this.trainingitems = items, error => this.errorMessage = <any>error);\r\n        this.trainingItems = [];\r\n    }\r\n    onUpdate(data: any) {\r\n        \r\n        this.data.Items = this.trainingItems;\r\n        this.trainingService.update(this.data).subscribe((data) => {\r\n            if (data.error == null) {\r\n                this.data = data;\r\n                this.trainingService.getTrainingList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\r\n                alert(\"updated successfully\");\r\n                jQuery('#myModalEdit').modal('hide');\r\n                this.itemid == \"\";\r\n            }\r\n            else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                alert(this.errorMessage);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                alert(this.errorMessage);\r\n            }\r\n        );\r\n    }\r\n    onEdit(id: string) {\r\n        // get training item ids and save into trainingItems array\r\n\r\n        this.trainingItems = [];\r\n        this.itemid = id;\r\n        if (id !== \"\") {\r\n            this.trainingService.get(id).subscribe((data) => {\r\n                this.data = data;\r\n                for (var i = 0; i < data.Items.length; i++) {\r\n                    this.trainingItems.push(data.Items[i]);\r\n                }\r\n            });\r\n            this.trainingItemService.getTrainingItemListForModal(this.searchModel).subscribe(items => this.trainingitems = items, error => this.errorMessage = <any>error);\r\n            console.log(this.data.Items);\r\n            //for (var j = 0; j < this.data.Items.length; j++){\r\n            //    this.isCheck(this.data.Items[j]);\r\n            //}\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    IsIntheList(id: string) {\r\n        for (var i = 0; i < this.trainingItems.length; i++) {\r\n            if (this.trainingItems[i] === id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //isCheck(item: string) {\r\n    //    for (var i = 0; i < this.trainingitems.length; i++) {\r\n    //        if (item == this.trainingitems[i].Id) {\r\n    //            (jQuery('#chkItem-' + i).attr(\"checked\", \"checked\"));\r\n    //            break;\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    isFormChanged(value) {\r\n        this.trainingService.get(this.data.Id).subscribe((oldData) => {\r\n            this.isFormDataChanged(oldData);\r\n        });\r\n    }\r\n    onChangeItem(e: any, id: string) {\r\n        this.isFormValuesChanged = true;\r\n        if (e.target.checked) {\r\n            this.trainingItems.push(id);\r\n            console.log(this.trainingItems);\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.trainingItems.length; i++) {\r\n                if (this.trainingItems[i] === id) {\r\n                    this.trainingItems.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isFormDataChanged(oldData: Training) {\r\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\r\n            this.isFormValuesChanged = false;\r\n        else\r\n            this.isFormValuesChanged = true;\r\n    }\r\n    changeItemSelect(value:any) {\r\n        console.log(value);\r\n    }\r\n\r\n    onChange(k: number) {\r\n        if (jQuery('#chkItem-' + k).prop('checked')) {\r\n            jQuery('#chkItem-' + k).prop('checked', false);\r\n        }\r\n        else {\r\n            jQuery('#chkItem-' + k).prop('checked', true);\r\n        }\r\n    }\r\n}\r\n\r\n"]}