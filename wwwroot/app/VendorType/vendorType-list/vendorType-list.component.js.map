{"version":3,"sources":["VendorType/vendorType-list/vendorType-list.component.ts"],"names":["VendorTypeListComponent","vendorTypeService","authService","router","this","title","toggle","isDelete","isLoading","prototype","ngOnInit","_this","isLoggedIn","navigate","getVendorTypeList","subscribe","items","VendorTypes","error","errorMessage","ngAfterViewInit","jQuery","actionDiv","nativeElement","hide","errorDiv","onSelect","data","selectedData","Id","addNewCategory","onDelete","filter","checked","forEach","delete","setTimeout","showActionDiv","status","width","show","direction","deleteConfirm","close","toggleItem","every","length","toggleAll","displayMessage","message","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","vendorType_service_1","VendorTypeService","exports_1"],"mappings":"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","file":"vendorType-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { VendorTypeService } from \"../shared/vendorType.service\";\nimport { VendorType } from \"../shared/vendorType.model\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../auth.service\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'VendorType',\n    template: `<div class=\"error-message\" #errorDiv></div>\n<div class=\"user-container\">\n   <h1 class=\"homeHeader\">{{title}}</h1>\n\n  <div class=\"col-right-s3 form-group\">\n    <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"Add\" (click)=\"addNewCategory()\" />\n  </div>\n  <div class=\"clearDiv\">\n  </div>\n  <div #actionDiv class=\"col-half-one-third leftPane\">\n     <div class=\"leftPaneContent form-group\">\n        <h2>Bulk Actions</h2>\n        <button class=\"btn btn-danger btn-block\"  (click)=\"deleteConfirm()\" [disabled]=\"isLoading\">                    \n         <div [class.cssload-container]=\"isLoading\">\n           <div [class.cssload-zenith]=\"isLoading\"></div>\n         </div>\n         <div [class.cssload-text]=\"isLoading\">Delete</div>\n        </button>\n                         \n        <div class=\"dialog\" *ngIf=\"isDelete\">\n          <h3>Are you sure to delete checked items ?</h3>\n            <input type=\"button\" class=\"btn btn-danger btn-block\"  value=\"Yes\" (click)=\"onDelete()\" />   <br/>          \n            <input type=\"button\" class=\"btn btn-primary btn-block\"  value=\"No\" (click)=\"close()\" />             \n       </div>\n       <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\n\n     </div>\n  </div>\n  <div class=\"col-half-two-third\">\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>Select All<br/><input type=\"checkbox\" [checked]=\"toggle\" (change)=\"toggleAll()\" /></th>         \n          <th>Name</th>         \n          <th>Is Active</th>           \n       </tr>\n     </thead>\n     <tbody>\n       <tr *ngFor=\"let VendorType of VendorTypes\" [class.selected]=\"VendorType === selectedData\">        \n        <td><input type=\"checkbox\" #chkSelect value=\"{{VendorType.Id}}\" [checked]=\"VendorType.checked\" (change)=\"toggleItem(VendorType)\" /></td>\n         <td><a href=\"vendortypelist/edit/{{VendorType.Id}}\">{{VendorType.Name}}</a></td>            \n         <td>{{VendorType.IsActive}}</td>            \n      </tr>\n     </tbody>\n    </table>\n  </div>\n  <div class=\"clearDiv\">\n  </div>\n</div>\n`,\n    providers: [VendorTypeService]\n})\n\nexport class VendorTypeListComponent {\n    title = \"Vendor Type List\";\n    selectedData: VendorType;\n    errorMessage: string;\n    toggle = false;\n    isDelete = false;\n    isLoading = false;\n    @ViewChild('actionDiv') actionDiv: ElementRef;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n\n    VendorTypes: VendorType[];\n    constructor(private vendorTypeService: VendorTypeService, private authService: AuthService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        this.vendorTypeService.getVendorTypeList().subscribe(items => this.VendorTypes = items, error => this.errorMessage = <any>error);\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.actionDiv.nativeElement).hide();\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    onSelect(data: VendorType) {\n        this.selectedData = data;\n        this.router.navigate([\"VendorTypeList/edit\", this.selectedData.Id]);\n    }\n\n    addNewCategory() {\n        this.router.navigate([\"vendortypelist/add\"]);\n    }\n\n\n    onDelete(data: VendorType) {\n        this.isDelete = false;\n        this.isLoading = true;\n\n        this.VendorTypes.filter(data => data.checked).forEach(selectedData =>\n            this.vendorTypeService.delete(selectedData.Id).subscribe((data) => {\n                if (data.error == null) {\n                    this.errorMessage = 'deleted selected data(s) successfully';\n                    setTimeout(() => {\n                        this.isLoading = false,\n                            jQuery(this.actionDiv.nativeElement).hide(1000),\n                            this.vendorTypeService.getVendorTypeList().subscribe(items => this.VendorTypes = items, error => this.errorMessage = <any>error);\n                    }, 2000);\n                }\n            })\n        );\n    }\n    showActionDiv(status: boolean) {\n        var boxWidth = jQuery(this.actionDiv.nativeElement).width();\n        if (status)\n            jQuery(this.actionDiv.nativeElement).show({ direction: \"left\" }, 1000);\n        else\n            jQuery(this.actionDiv.nativeElement).hide(1000);\n    }\n\n    deleteConfirm() {\n        this.isDelete = true;\n    }\n\n    close() {\n        this.isDelete = false;\n    }\n\n    toggleItem(data) {\n        data.checked = !data.checked;\n        this.toggle = this.VendorTypes.every(data => data.checked);\n\n        this.showActionDiv(this.VendorTypes.filter(data => data.checked).length > 0);\n    }\n    toggleAll() {\n        this.toggle = !this.toggle;\n        this.VendorTypes.forEach(data => data.checked = this.toggle);\n        this.showActionDiv(this.VendorTypes.filter(data => data.checked).length > 0);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n\n\n   \n\n}"]}