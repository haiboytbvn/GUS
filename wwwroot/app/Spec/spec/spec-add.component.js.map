{"version":3,"sources":["Spec/spec/spec-add.component.ts"],"names":["SpecAddComponent","fb","specService","router","sizerangeService","authService","activatedRoute","this","errorMessage","prototype","ngOnInit","_this","isLoggedIn","navigate","searchGeneralFilter","searchGeneralFilter_model_1","SearchGeneralFilter","getSizeRangeList","subscribe","items","sizeranges","error","data","spec_model_1","Spec","title","specForm","group","name","forms_1","Validators","required","isactive","buyercode","sizerange","guidedspecsize","ngAfterViewInit","jQuery","errorDiv","nativeElement","hide","ngOnDestroy","onSubmit","console","log","spec","add","displayMessage","onBack","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","spec_service_1","SpecService","FormBuilder","sizerange_service_1","SizeRangeService","exports_1"],"mappings":"2hDAgEAA,iBAAA,WAQI,QAAAA,kBACYC,GACAC,YACAC,OACAC,iBACAC,YACAC,gBALAC,KAAAN,GAAAA,GACAM,KAAAL,YAAAA,YACAK,KAAAJ,OAAAA,OACAI,KAAAH,iBAAAA,iBACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eAVZC,KAAAC,aAAe,KAkFnB,MArEIR,kBAAAS,UAAAC,SAAA,WAAA,GAAAC,OAAAJ,IACSA,MAAKF,YAAYO,cAClBL,KAAKJ,OAAOU,UAAU,IAE1B,IAAIC,qBAAsB,GAAIC,6BAAAC,oBAAoB,GAAI,GAAI,GAAI,GAC9DT,MAAKH,iBAAiBa,iBAAiBH,qBAAqBI,UAAU,SAAAC,OAAS,MAAAR,OAAKS,WAAaD,OAAO,SAAAE,OAAS,MAAAV,OAAKH,aAAoBa,QAC1Id,KAAKe,KAAO,GAAIC,cAAAC,KAAK,GAAI,KAAM,MAAM,EAAO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI,GACxEjB,KAAKkB,MAAQ,WACblB,KAAKmB,SAAWnB,KAAKN,GAAG0B,OAEhBC,MAAO,IACHC,QAAAC,WAAWC,WAEfC,WAAW,GACXC,WAAY,IACZC,WAAY,IACZC,gBAAiB,OAQ7BnC,iBAAAS,UAAA2B,gBAAA,WACIC,OAAO9B,KAAK+B,SAASC,eAAeC,QAGxCxC,iBAAAS,UAAAgC,YAAA,WACIlC,KAAKL,YAAYoB,KAAOf,KAAKe,MAGjCtB,iBAAAS,UAAAiC,SAAA,SAASpB,MAAT,GAAAX,OAAAJ,IACIoC,SAAQC,IAAItB,KACZ,IAAIuB,MAAO,GAAItB,cAAAC,KAAK,GAAG,KAAK,KAAKF,KAAKU,SAAS,GAAGV,KAAKM,KAAK,GAAG,GAAGN,KAAKW,UAAUX,KAAKY,UAAUZ,KAAKa,gBAAe,EACpH5B,MAAKL,YAAY4C,IAAID,MAAM3B,UAAU,SAACI,MACZ,MAAdA,KAAKD,OACLV,MAAKW,KAAOA,KACZX,MAAKH,aAAe,0BACpBG,MAAKoC,eAAepC,MAAKH,cAAc,KAIvCG,MAAKH,aAAec,KAAKD,MACzBV,MAAKoC,eAAepC,MAAKH,cAAc,KAG3C,SAACa,OACGV,MAAKH,aAAea,MACpBV,MAAKoC,eAAepC,MAAKH,cAAc,MAMvDR,iBAAAS,UAAAuC,OAAA,WACIzC,KAAKJ,OAAOU,UAAU,UAI1Bb,iBAAAS,UAAAsC,eAAA,SAAeE,QAAiBC,QAC5Bb,OAAO9B,KAAK+B,SAASC,eAAeY,cACpC5C,KAAK+B,SAASC,cAAca,UAAYH,QAEpCC,OAAUb,OAAO9B,KAAK+B,SAASC,eAAec,SAAS,mBACpDhB,OAAO9B,KAAK+B,SAASC,eAAec,SAAS,iBAEpDhB,OAAO9B,KAAK+B,SAASC,eAAee,UAAU,KAAMC,MAAM,KAAMC,QAAQ,MA/E5EC,YAACC,OAAAC,UAAU,uGAzDf3D,iBAAAyD,YAACC,OAAAE,WACGC,SAAU,WACVC,SAAU,+uEA+CVC,WAAYC,eAAAC,YAAapC,QAAAqC,YAAaC,oBAAAC,mOAG1CC,UAAA,mBAAArE","file":"spec-add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Spec } from \"../../Spec/shared/spec.model\";\nimport { SpecService } from \"../../Spec/shared/spec.service\";\nimport { SizeRange } from \"../../SizeRange/shared/sizerange.model\";\nimport { SizeRangeService } from \"../../SizeRange/shared/sizerange.service\";\nimport { AuthService } from \"../../auth.service\";\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\n\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"spec-add\",\n    template: `\n<div class=\"error-message\" #errorDiv></div>\n<div *ngIf=\"data\">\n    <h2>\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\n            &laquo; Back to Spec List\n        </a>\n    </h2>\n  <div class=\"user-container\">    \n    <form class=\"form-user\" [formGroup]=\"specForm\" >\n        <h2 class=\"form-user-heading\">{{title}}</h2>\n        \n        <div class=\"form-group\">\n            <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Enter name\" value=\"this.data.Name\" autofocus />\n            <span class=\"validator-label valid\" *ngIf=\"this.specForm.controls.name.valid\">\n                <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\n                valid!\n            </span>\n            <span class=\"validator-label invalid\" *ngIf=\"!this.specForm.controls.name.valid && !this.specForm.controls.name.pristine\">\n                <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                invalid\n            </span>\n        </div>  \n      \n        <div class=\"form-group\">\n            <input formControlName=\"buyercode\" type=\"text\" class=\"form-control\" placeholder=\"Enter buyer code\" value=\"this.data.BuyerCode\" autofocus />\n        </div> \n        <div class=\"form-group\">\n            <input formControlName=\"guidedspecsize\" type=\"text\" class=\"form-control\" placeholder=\"Enter buyer code\" value=\"this.data.GuidedSpecSize\" autofocus />\n        </div> \n       <div class=\"form-group\">\n            <select value=\"this.data?.SizeRange\" class=\"form-control input-medium\" style=\"width:332px\" formControlName=\"sizerange\">\n                    <option value=\"\">Chose a size range</option>\n                    <option *ngFor=\"let sizerange of sizeranges\" value=\"{{sizerange.Id}}\">{{sizerange.Name}}</option>\n            </select>\n        </div>  \n         \n        <div class=\"form-group\">\n           Is Active? <input formControlName=\"isactive\" type=\"checkbox\" value=\"this.data.IsActive\" autofocus />     \n        </div>                    \n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!specForm.valid\" value=\"Add\" (click)=\"onSubmit(this.specForm.value)\" />\n        </div>       \n    </form>\n  </div>\n</div>\n`,\n    providers: [SpecService, FormBuilder, SizeRangeService]\n})\n\nexport class SpecAddComponent {\n    data: Spec;\n    title: string;\n    specForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n    sizeranges: SizeRange[];\n \n    constructor(\n        private fb: FormBuilder,\n        private specService: SpecService,\n        private router: Router,\n        private sizerangeService: SizeRangeService,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        var searchGeneralFilter = new SearchGeneralFilter(\"\", \"\", \"\", \"\");\n        this.sizerangeService.getSizeRangeList(searchGeneralFilter).subscribe(items => this.sizeranges = items, error => this.errorMessage = <any>error);\n        this.data = new Spec(\"\", null, null, false, \"\", \"\", \"\", \"\", \"\", \"\", \"\", false);\n        this.title = \"New Spec\";\n        this.specForm = this.fb.group(\n            {\n                name: [\"\", [\n                    Validators.required\n                ]], \n                isactive: [true],\n                buyercode: [\"\"],\n                sizerange: [\"\"],\n                guidedspecsize: [\"\"]                             \n            });\n\n       \n\n      \n    }\n\n    ngAfterViewInit() {\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    ngOnDestroy() {\n        this.specService.data = this.data;\n    }\n\n    onSubmit(data: any) {\n        console.log(data);\n        var spec = new Spec(\"\",null,null,data.isactive,\"\",data.name,\"\",\"\",data.buyercode,data.sizerange,data.guidedspecsize,false);\n        this.specService.add(spec).subscribe((data) => {\n                if (data.error == null) {\n                    this.data = data;\n                    this.errorMessage = 'Spec added successfully';\n                    this.displayMessage(this.errorMessage, true);\n                }\n                else {\n                    // update failure\n                    this.errorMessage = data.error;\n                    this.displayMessage(this.errorMessage, false);\n                }\n            },\n                (error) => {\n                    this.errorMessage = error;\n                    this.displayMessage(this.errorMessage, false);\n                }\n            );\n\n    }\n\n    onBack() {\n        this.router.navigate([\"spec\"]);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n}"]}