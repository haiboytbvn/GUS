{"version":3,"sources":["Spec/spec-list/spec-list.component.ts"],"names":["SpecListComponent","specService","authService","router","this","title","toggle","isDelete","isLoading","prototype","ngOnInit","_this","isLoggedIn","navigate","searchModel","searchGeneralFilter_model_1","SearchGeneralFilter","getSpecList","subscribe","items","specs","error","errorMessage","ngAfterViewInit","jQuery","actionDiv","nativeElement","hide","errorDiv","onSelect","data","selectedData","Id","addNewSpec","onDelete","filter","checked","forEach","delete","setTimeout","showActionDiv","status","width","show","direction","deleteConfirm","close","toggleItem","every","length","toggleAll","displayMessage","message","removeClass","innerHTML","addClass","slideDown","delay","slideUp","doSearch","searchmodel","__decorate","core_1","ViewChild","Component","selector","template","providers","spec_service_1","SpecService","exports_1"],"mappings":"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","file":"spec-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { SpecService } from \"../shared/spec.service\";\nimport { Spec } from \"../shared/spec.model\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../auth.service\";\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'spec',\n    template: `<div class=\"error-message\" #errorDiv></div>\n<div class=\"user-container\">\n   <h1 class=\"homeHeader\">{{title}}</h1>\n<div class=\"form-inline mt-50\">\n    <div class=\"form-group\">\n      <label class=\"sr-only\" for=\"name\">Name:</label>\n       <input type=\"text\" [(ngModel)]=\"searchModel.Name\" class=\"form-control\" placeholder=\"Enter name\">\n    </div>\n    <div class=\"form-group\">\n      <label class=\"sr-only\" for=\"name\">Code:</label>\n      <input type=\"text\" [(ngModel)]=\"searchModel.Code\" class=\"form-control\" placeholder=\"Enter code\">\n    </div>\n    <div class=\"checkbox\">\n     <label class=\"sr-only\" for=\"name\">Buyer code:</label>\n      <input type=\"text\" [(ngModel)]=\"searchModel.BuyerCode\" class=\"form-control\" placeholder=\"Enter buyer code\">\n    </div>\n    <input type=\"button\" class=\"btn\" value=\"Search\" (click)=\"doSearch(searchModel)\" />\n  </div>\n  <div class=\"col-right-s3 form-group\">\n    <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"Add\" (click)=\"addNewSpec()\" />\n  </div>\n  <div class=\"clearDiv\">\n  </div>\n  <div #actionDiv class=\"col-half-one-third leftPane\">\n     <div class=\"leftPaneContent form-group\">\n        <h2>Bulk Actions</h2>\n        <button class=\"btn btn-danger btn-block\"  (click)=\"deleteConfirm()\" [disabled]=\"isLoading\">                    \n         <div [class.cssload-container]=\"isLoading\">\n           <div [class.cssload-zenith]=\"isLoading\"></div>\n         </div>\n         <div [class.cssload-text]=\"isLoading\">Delete</div>\n        </button>\n                         \n        <div class=\"dialog\" *ngIf=\"isDelete\">\n          <h3>Are you sure to delete checked items ?</h3>\n            <input type=\"button\" class=\"btn btn-danger btn-block\"  value=\"Yes\" (click)=\"onDelete()\" />   <br/>          \n            <input type=\"button\" class=\"btn btn-primary btn-block\"  value=\"No\" (click)=\"close()\" />             \n       </div>\n       <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\n\n     </div>\n  </div>\n  <div class=\"col-half-two-third\">\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>Select All<br/><input type=\"checkbox\" [checked]=\"toggle\" (change)=\"toggleAll()\" /></th>         \n          <th>Name</th>                 \n          <th>Buyer Code</th>         \n          <th>Size Range</th>         \n          <th>Guided Spec Size</th>         \n          <th>Is Active</th>           \n       </tr>\n     </thead>\n     <tbody>\n       <tr *ngFor=\"let spec of specs\" [class.selected]=\"spec === selectedData\">        \n        <td><input type=\"checkbox\" #chkSelect value=\"{{spec.Id}}\" [checked]=\"spec.checked\" (change)=\"toggleItem(spec)\" /></td>\n         <td><a href=\"spec/edit/{{spec.Id}}\">{{spec.Name}}</a></td>                       \n         <td>{{spec.BuyerCode}}</td>            \n         <td>{{spec.SizeRange}}</td>            \n         <td>{{spec.GuidedSpecSize}}</td>            \n         <td>{{spec.IsActive}}</td>            \n      </tr>\n     </tbody>\n    </table>\n  </div>\n  <div class=\"clearDiv\">\n  </div>\n</div>\n`,\n    providers: [SpecService]\n})\n\nexport class SpecListComponent {\n    title = \"Spec\";\n    selectedData: Spec;\n    errorMessage: string;\n    toggle = false;\n    isDelete = false;\n    isLoading = false;\n    searchModel: SearchGeneralFilter;\n    @ViewChild('actionDiv') actionDiv: ElementRef;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n\n    specs: Spec[];\n    constructor(private specService: SpecService, private authService: AuthService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        this.searchModel = new SearchGeneralFilter(\"\", \"\", \"\", \"\");\n        this.specService.getSpecList(this.searchModel).subscribe(items => this.specs = items, error => this.errorMessage = <any>error);\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.actionDiv.nativeElement).hide();\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    onSelect(data: Spec) {\n        this.selectedData = data;\n        this.router.navigate([\"spec/edit\", this.selectedData.Id]);\n    }\n\n    addNewSpec() {\n        this.router.navigate([\"spec/add\"]);\n    }\n\n\n    onDelete(data: Spec) {\n        this.isDelete = false;\n        this.isLoading = true;\n\n        this.specs.filter(data => data.checked).forEach(selectedData =>\n            this.specService.delete(selectedData.Id).subscribe((data) => {\n                if (data.error == null) {\n                    this.errorMessage = 'deleted selected data(s) successfully';\n                    setTimeout(() => {\n                        this.isLoading = false,\n                            jQuery(this.actionDiv.nativeElement).hide(1000),\n                            this.specService.getSpecList(this.searchModel).subscribe(items => this.specs = items, error => this.errorMessage = <any>error);\n                    }, 2000);\n                }\n            })\n        );\n    }\n    showActionDiv(status: boolean) {\n        var boxWidth = jQuery(this.actionDiv.nativeElement).width();\n        if (status)\n            jQuery(this.actionDiv.nativeElement).show({ direction: \"left\" }, 1000);\n        else\n            jQuery(this.actionDiv.nativeElement).hide(1000);\n    }\n\n    deleteConfirm() {\n        this.isDelete = true;\n    }\n\n    close() {\n        this.isDelete = false;\n    }\n\n    toggleItem(data) {\n        data.checked = !data.checked;\n        this.toggle = this.specs.every(data => data.checked);\n\n        this.showActionDiv(this.specs.filter(data => data.checked).length > 0);\n    }\n    toggleAll() {\n        this.toggle = !this.toggle;\n        this.specs.forEach(data => data.checked = this.toggle);\n        this.showActionDiv(this.specs.filter(data => data.checked).length > 0);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n    doSearch(searchmodel: SearchGeneralFilter) {\n\n        this.specService.getSpecList(searchmodel).subscribe(items => this.specs = items, error => this.errorMessage = <any>error);\n    }\n\n}"]}