{"version":3,"sources":["Shipping/shipping/shipping-add.component.ts"],"names":["ShippingAddComponent","fb","shippingtypeService","endbuyerService","divisionService","deptServcie","brandService","shippingService","router","authService","activatedRoute","this","errorMessage","prototype","fileChangeEvent","fileUpload","jQuery","get","files","data","FormData","i","length","append","name","ajax","type","url","contentType","processData","success","val","UploadPath","attr","Image","FileName","Size","error","alert","ngOnInit","_this","isLoggedIn","navigate","shippingForm","group","code","buyercode","forms_1","Validators","required","brand","department","remark","division","shippingtype","endbuyer","isactive","regname","searchname","email","fax","tel","city","country","postalcode","contact","address","pageall","pagination_model_1","PaginationModel","getAll","generalsearch_model_1","GeneralSearchModel","paging","searchModel","getShippingTypeList","subscribe","items","shippingtypes","getEndBuyerList","endbuyers","getBrandList","brands","getDepartmentList","depts","getDivisionList","divisions","shipping_model_1","Shipping","title","ngAfterViewInit","errorDiv","nativeElement","hide","ngOnDestroy","onSubmit","shippingData","newData","add","displayMessage","onBack","onUpdate","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","shipping_service_1","ShippingService","FormBuilder","shippingtype_service_1","ShippingTypeService","endbuyer_service_1","EndBuyerService","department_service_1","DepartmentService","brand_service_1","BrandService","division_service_1","DivisionService","exports_1"],"mappings":"0sEAkIAA,qBAAA,WAcI,QAAAA,sBACYC,GACAC,oBACAC,gBACAC,gBACAC,YACAC,aACAC,gBACAC,OACAC,YACAC,gBATAC,KAAAV,GAAAA,GACAU,KAAAT,oBAAAA,oBACAS,KAAAR,gBAAAA,gBACAQ,KAAAP,gBAAAA,gBACAO,KAAAN,YAAAA,YACAM,KAAAL,aAAAA,aACAK,KAAAJ,gBAAAA,gBACAI,KAAAH,OAAAA,OACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eAnBZC,KAAAC,aAAe,KAgJnB,MA3HIZ,sBAAAa,UAAAC,gBAAA,WAKI,IAAK,GAHDC,YAAaC,OAAO,UAAUC,IAAI,GAClCC,MAAQH,WAAWG,MACnBC,KAAO,GAAIC,UACNC,EAAI,EAAGA,EAAIH,MAAMI,OAAQD,IAC9BF,KAAKI,OAAOL,MAAMG,GAAGG,KAAMN,MAAMG,GAErCL,QAAOS,MACHC,KAAM,OACNC,IAAK,2BACLC,aAAa,EACbC,aAAa,EACbV,KAAMA,KACNW,QAAS,SAAUX,MACfH,OAAO,YAAYe,IAAIZ,KAAKa,YAC5BhB,OAAO,eAAeiB,KAAK,MAAOd,KAAKa,YACvCrB,KAAKQ,KAAKe,MAAQf,KAAKa,WACvBhB,OAAO,YAAYO,OAAO,QAAUJ,KAAKgB,SAAW,SAAWhB,KAAKiB,KAAO,2BAE/EC,MAAO,WACHC,MAAM,wCAKlBtC,qBAAAa,UAAA0B,SAAA,WAAA,GAAAC,OAAA7B,IACSA,MAAKF,YAAYgC,cAClB9B,KAAKH,OAAOkC,UAAU,KAG1B/B,KAAKgC,aAAehC,KAAKV,GAAG2C,OAExBC,MAAO,IACPC,WAAY,IACZtB,MACI,IACIuB,QAAAC,WAAWC,WAGnBC,OAAQ,IACRC,YAAa,IACbC,QAAS,IACTC,UAAW,IACXC,cAAe,IACfC,UAAW,IACXC,WAAW,GACXC,SAAU,IACVC,YAAa,IACbC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,SAAU,IACVC,YAAa,IACbC,SAAU,IACVC,SAAS,KAIb,IAAIC,SAAU,GAAIC,oBAAAC,gBAAgB,GAAI,EAAG,OAAQ,KAAO,GACpDC,OAAS,GAAIC,uBAAAC,mBAAmB,GAAI,GAAI,GAAI,GAAIL,QAGpDxD,MAAK8D,OAAS,GAAIL,oBAAAC,gBAAgB,GAAI,EAAG,OAAQ,KAAO,GACxD1D,KAAK+D,YAAc,GAAIH,uBAAAC,mBAAmB,GAAI,GAAI,GAAI,GAAI7D,KAAK8D,QAC/D9D,KAAKT,oBAAoByE,oBAAoBL,QAAQM,UAAU,SAAAC,OAAS,MAAArC,OAAKsC,cAAgBD,OAAO,SAAAxC,OAAS,MAAAG,OAAK5B,aAAoByB,QACtI1B,KAAKR,gBAAgB4E,gBAAgBT,QAAQM,UAAU,SAAAC,OAAS,MAAArC,OAAKwC,UAAYH,OAAO,SAAAxC,OAAS,MAAAG,OAAK5B,aAAoByB,QAC1H1B,KAAKL,aAAa2E,aAAatE,KAAK+D,aAAaE,UAAU,SAAAC,OAAS,MAAArC,OAAK0C,OAASL,OAAO,SAAAxC,OAAS,MAAAG,OAAK5B,aAAoByB,QAC3H1B,KAAKN,YAAY8E,kBAAkBxE,KAAK+D,aAAaE,UAAU,SAAAC,OAAS,MAAArC,OAAK4C,MAAQP,OAAO,SAAAxC,OAAS,MAAAG,OAAK5B,aAAoByB,QAC9H1B,KAAKP,gBAAgBiF,gBAAgB1E,KAAK+D,aAAaE,UAAU,SAAAC,OAAS,MAAArC,OAAK8C,UAAYT,OAAO,SAAAxC,OAAS,MAAAG,OAAK5B,aAAoByB,QACrI1B,KAAKQ,KAAO,GAAIoE,kBAAAC,SAAS,IAAG,EAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAG,EAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAC7F7E,KAAK8E,MAAQ,gBAGjBzF,qBAAAa,UAAA6E,gBAAA,WACI1E,OAAOL,KAAKgF,SAASC,eAAeC,QAGxC7F,qBAAAa,UAAAiF,YAAA,WACInF,KAAKJ,gBAAgBY,KAAOR,KAAKQ,MAGrCnB,qBAAAa,UAAAkF,SAAA,SAASC,cAAT,GAAAxD,OAAA7B,KACQsF,QAAU,GAAIV,kBAAAC,SAAS,GAAIQ,aAAaxC,SAAUwC,aAAaxE,KAAMwE,aAAalD,UAAWkD,aAAa9C,MAAO8C,aAAa7C,WAAY6C,aAAa3C,SAAUrC,OAAO,YAAYe,OAAO,EAAOiE,aAAa5C,OAAO4C,aAAa1C,aAC/O0C,aAAa9B,QAAQ8B,aAAavC,QAAQuC,aAAatC,WAAWsC,aAAarC,MAAMqC,aAAazC,SAASyC,aAAapC,IAAIoC,aAAanC,IAAImC,aAAalC,KAAKkC,aAAajC,QAAQiC,aAAahC,WAAWgC,aAAa/B,QACjNtD,MAAKJ,gBAAgB2F,IAAID,SAASrB,UAAU,SAACzD,MACvB,MAAdA,KAAKkB,OACLG,MAAKrB,KAAOA,KACZqB,MAAK5B,aAAe,8BACpB4B,MAAK2D,eAAe3D,MAAK5B,cAAc,KAIvC4B,MAAK5B,aAAeO,KAAKkB,MACzBG,MAAK2D,eAAe3D,MAAK5B,cAAc,KAG3C,SAACyB,OACGG,MAAK5B,aAAeyB,MACpBG,MAAK2D,eAAe3D,MAAK5B,cAAc,MAMnDZ,qBAAAa,UAAAuF,OAAA,WACIzF,KAAKH,OAAOkC,UAAU,cAG1B1C,qBAAAa,UAAAwF,SAAA,SAASlF,QAITnB,qBAAAa,UAAAsF,eAAA,SAAeG,QAAiBC,QAC5BvF,OAAOL,KAAKgF,SAASC,eAAeY,cACpC7F,KAAKgF,SAASC,cAAca,UAAYH,QAEpCC,OAAUvF,OAAOL,KAAKgF,SAASC,eAAec,SAAS,mBACpD1F,OAAOL,KAAKgF,SAASC,eAAec,SAAS,iBAEpD1F,OAAOL,KAAKgF,SAASC,eAAee,UAAU,KAAMC,MAAM,KAAMC,QAAQ,MA7I5EC,YAACC,OAAAC,UAAU,2GArHfhH,qBAAA8G,YAACC,OAAAE,WACGC,SAAU,eACVC,SAAU,yvMA0GVC,WAAYC,mBAAAC,gBAAiBvE,QAAAwE,YAAaC,uBAAAC,oBAAqBC,mBAAAC,gBAAiBC,qBAAAC,kBAAmBC,gBAAAC,aAAcC,mBAAAC,8XAGrHC,UAAA,uBAAAlI","file":"shipping-add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Shipping } from \"../../Shipping/shared/shipping.model\";\nimport { ShippingService } from \"../../Shipping/shared/shipping.service\";\nimport { EndBuyerService } from \"../../EndBuyer/shared/endbuyer.service\";\nimport { EndBuyer } from \"../../EndBuyer/shared/endbuyer.model\";\nimport { Department } from \"../../Department/shared/department.model\";\nimport { DepartmentService } from \"../../Department/shared/department.service\";\nimport { Division } from \"../../Division/shared/division.model\";\nimport { DivisionService } from \"../../Division/shared/division.service\";\nimport { ShippingTypeService } from \"../../ShippingType/shared/shippingtype.service\";\nimport { ShippingType } from \"../../ShippingType/shared/shippingtype.model\";\nimport { Brand } from \"../../Brand/shared/brand.model\";\nimport { BrandService } from \"../../Brand/shared/brand.service\";\nimport { AuthService } from \"../../auth.service\";\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\ndeclare var jQuery: any;\n@Component({\n    selector: \"shipping-add\",\n    template: `\n<div class=\"error-message\" #errorDiv></div>\n<div *ngIf=\"data\">\n    <h2>\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\n            &laquo; Back to Shipping List\n        </a>\n    </h2>\n  <div class=\"user-container\">    \n    <form class=\"form-user\" [formGroup]=\"shippingForm\" >\n        <h2 class=\"form-user-heading\">{{title}}</h2>\n          <input type=\"hidden\" id=\"hdImage\" value=\"\"/>\n           <div class=\"form-group\">\n            <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Enter shipping name\" value=\"this.data.Name\"  />\n            <span class=\"validator-label valid\" *ngIf=\"this.shippingForm.controls.name.valid\">\n                <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\n                valid!\n            </span>\n            <span class=\"validator-label invalid\" *ngIf=\"!this.shippingForm.controls.name.valid && !this.shippingForm.controls.name.pristine\">\n                <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                invalid\n            </span>\n        </div>\n        <div class=\"form-group\">\n            <input formControlName=\"buyercode\" type=\"text\" class=\"form-control\" placeholder=\"Enter buyer code\" value=\"this.data.BuyerCode\" autofocus />            \n        </div>     \n        <div class=\"form-group\">\n            <select value=\"this.data.Brand\" class=\"form-control\" style=\"width:332px\" formControlName=\"brand\">\n                 <option value=\"\">Chose a brand</option>\n                 <option *ngFor=\"let brand of brands\" value=\"{{brand.Id}}\">{{brand.Name}}</option>\n            </select>\n        </div>   \n         <div class=\"form-group\">\n            <select value=\"this.data.Department\" class=\"form-control input-medium\" style=\"width:332px\" formControlName=\"department\">\n                    <option value=\"\">Chose a department</option>\n                    <option *ngFor=\"let dept of depts\" value=\"{{dept.Id}}\">{{dept.Name}}</option>\n            </select>\n        </div>  \n        <div class=\"form-group\">\n            <select value=\"this.data.Division\" class=\"form-control input-medium\" style=\"width:332px\" formControlName=\"division\">\n                    <option value=\"\">Chose a division</option>\n              <option *ngFor=\"let division of divisions\" value=\"{{division.Id}}\">{{division.Name}}</option>\n            </select>\n        </div> \n        <div class=\"form-group\">\n            <select value=\"this.data.ShippingType\" class=\"form-control input-medium\" style=\"width:332px\" formControlName=\"shippingtype\">\n                 <option value=\"\">Chose a shipping type</option>\n                 <option *ngFor=\"let type of shippingtypes\" value=\"{{type.Id}}\">{{type.Name}}</option>\n            </select>\n        </div> \n         <div class=\"form-group\">\n            <select value=\"this.data.EndBuyer\" class=\"form-control input-medium\" style=\"width:332px\" formControlName=\"endbuyer\">\n                 <option value=\"\">Chose an end buyer</option>             \n                 <option *ngFor=\"let buyer of endbuyers\" value=\"{{buyer.Id}}\">{{buyer.Name}}</option>\n            </select>\n        </div> \n       <div class=\"form-group\">\n                    <input formControlName=\"address\" type=\"text\" class=\"form-control\" placeholder=\"Enter address\" value=\"this.data.Address\" autofocus />            \n                </div>   \n <div class=\"form-group\">\n                    <input formControlName=\"contact\" type=\"text\" class=\"form-control\" placeholder=\"Enter contact\" value=\"this.data.Contact\" autofocus />            \n                </div>   \n <div class=\"form-group\">\n                    <input formControlName=\"country\" type=\"text\" class=\"form-control\" placeholder=\"Enter country\" value=\"this.data.Country\" autofocus />            \n                </div>   \n        <div class=\"form-group\">\n                    <input formControlName=\"regname\" type=\"text\" class=\"form-control\" placeholder=\"Enter reg name\" value=\"this.data.Regname\" autofocus />            \n                </div> \n<div class=\"form-group\">\n                    <input formControlName=\"searchname\" type=\"text\" class=\"form-control\" placeholder=\"Enter search name\" value=\"this.data.SearchName\" autofocus />            \n                </div>   \n<div class=\"form-group\">\n                    <input formControlName=\"email\" type=\"email\" class=\"form-control\" placeholder=\"Enter email\" value=\"this.data.Email\" autofocus />            \n                </div>  \n<div class=\"form-group\">\n                    <input formControlName=\"fax\" type=\"text\" class=\"form-control\" placeholder=\"Enter fax\" value=\"this.data.Fax\" autofocus />            \n                </div>\n<div class=\"form-group\">\n                    <input formControlName=\"postalcode\" type=\"text\" class=\"form-control\" placeholder=\"Enter postal code\" value=\"this.data.PostalCode\" autofocus />            \n                </div>     \n<div class=\"form-group\">\n                    <input formControlName=\"tel\" type=\"tel\" class=\"form-control\" placeholder=\"Enter tel\" value=\"this.data.Tel\" autofocus />            \n                </div>  \n<div class=\"form-group\">\n                    <input formControlName=\"city\" type=\"tel\" class=\"form-control\" placeholder=\"Enter city\" value=\"this.data.City\" autofocus />            \n                </div>  \n        <div class=\"form-group\">\n                    <input formControlName=\"remark\" type=\"text\" class=\"form-control\" placeholder=\"Enter remark\" value=\"this.data.Remark\" autofocus />            \n                </div> \n       <div class=\"form-group\">       \n                <input type=\"file\" id=\"files\" name=\"files\" multiple />\n                <input type=\"button\" id=\"upload\" (click)=\"fileChangeEvent()\" value=\"Upload\" />\n                <img src=\"\" alt=\"\" height=\"42\" width=\"42\" id=\"imgPreview\">\n <div class=\"alert alert-success\" id=\"lblinFo\">\n                </div>\n        </div> \n        <div class=\"form-group\">\n           Is Active? <input formControlName=\"isactive\" type=\"checkbox\" value=\"this.data.IsActive\" autofocus />     \n        </div>                   \n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!shippingForm.valid\" value=\"Add\" (click)=\"onSubmit(this.shippingForm.value)\" />\n        </div>       \n    </form>\n  </div>\n</div>\n`,\n    providers: [ShippingService, FormBuilder, ShippingTypeService, EndBuyerService, DepartmentService, BrandService, DivisionService]\n})\n\nexport class ShippingAddComponent {\n\n    data: Shipping;\n    title: string;\n    shippingForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n    shippingtypes: ShippingType[];\n    endbuyers: EndBuyer[];\n    depts: Department[];\n    brands: Brand[];\n    divisions: Division[];\n    searchModel: GeneralSearchModel;\n    paging: PaginationModel;\n    constructor(\n        private fb: FormBuilder,\n        private shippingtypeService: ShippingTypeService,\n        private endbuyerService: EndBuyerService,\n        private divisionService: DivisionService,\n        private deptServcie: DepartmentService,\n        private brandService: BrandService,\n        private shippingService: ShippingService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n    fileChangeEvent() {\n\n        var fileUpload = jQuery(\"#files\").get(0);\n        var files = fileUpload.files;\n        var data = new FormData();\n        for (var i = 0; i < files.length; i++) {\n            data.append(files[i].name, files[i]);\n        }\n        jQuery.ajax({\n            type: \"POST\",\n            url: \"api/shipping/UploadImage\",\n            contentType: false,\n            processData: false,\n            data: data,\n            success: function (data) {\n                jQuery('#hdImage').val(data.UploadPath);\n                jQuery('#imgPreview').attr(\"src\", data.UploadPath);\n                this.data.Image = data.UploadPath;\n                jQuery('#lblinFo').append('File ' + data.FileName + ' size ' + data.Size + ' uploaded successfully');\n            },\n            error: function () {\n                alert(\"There was error uploading files!\");\n            }\n        });\n\n    }\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n\n        this.shippingForm = this.fb.group(\n        {\n            code: [\"\"],\n            buyercode: [\"\"],\n            name: [\n                \"\", [\n                    Validators.required\n                ]\n            ],\n            brand: [\"\"],\n            department: [\"\"],\n            remark: [\"\"],\n            division: [\"\"],\n            shippingtype: [\"\"],\n            endbuyer: [\"\"],\n            isactive: [true],\n            regname: [\"\"],\n            searchname: [\"\"],\n            email: [\"\"],\n            fax: [\"\"],\n            tel: [\"\"],\n            city: [\"\"],\n            country: [\"\"],\n            postalcode: [\"\"],\n            contact: [\"\"],\n            address:[\"\"]\n\n            }\n        );\n        var pageall = new PaginationModel(10, 0, \"Name\", 0, [], 0);\n        var getAll = new GeneralSearchModel(\"\", \"\", \"\", \"\", pageall);\n\n   \n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\n        this.shippingtypeService.getShippingTypeList(getAll).subscribe(items => this.shippingtypes = items, error => this.errorMessage = <any>error);\n        this.endbuyerService.getEndBuyerList(getAll).subscribe(items => this.endbuyers = items, error => this.errorMessage = <any>error);\n        this.brandService.getBrandList(this.searchModel).subscribe(items => this.brands = items, error => this.errorMessage = <any>error);\n        this.deptServcie.getDepartmentList(this.searchModel).subscribe(items => this.depts = items, error => this.errorMessage = <any>error);\n        this.divisionService.getDivisionList(this.searchModel).subscribe(items => this.divisions = items, error => this.errorMessage = <any>error);\n       this.data = new Shipping(\"\",false,\"\",\"\",\"\",\"\",\"\",\"\",false,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n        this.title = \"New Shipping\";\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    ngOnDestroy() {\n        this.shippingService.data = this.data;\n    }\n\n    onSubmit(shippingData: any) {\n        var newData = new Shipping(\"\", shippingData.isactive, shippingData.name, shippingData.buyercode, shippingData.brand, shippingData.department, shippingData.division, jQuery(\"#hdImage\").val(), false, shippingData.remark,shippingData.shippingtype,\nshippingData.address,shippingData.regname,shippingData.searchname,shippingData.email,shippingData.endbuyer,shippingData.fax,shippingData.tel,shippingData.city,shippingData.country,shippingData.postalcode,shippingData.contact);\n        this.shippingService.add(newData).subscribe((data) => {\n            if (data.error == null) {\n                this.data = data;\n                this.errorMessage = 'Shipping added successfully';\n                this.displayMessage(this.errorMessage, true);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        );\n\n    }\n\n    onBack() {\n        this.router.navigate([\"shipping\"]);\n    }\n\n    onUpdate(data: Shipping) {\n\n    }\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n}"]}