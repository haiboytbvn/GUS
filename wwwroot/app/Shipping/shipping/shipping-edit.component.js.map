{"version":3,"sources":["Shipping/shipping/shipping-edit.component.ts"],"names":["ShippingEditComponent","fb","shippingService","shippingtypeService","endbuyerService","divisionService","deptServcie","brandService","router","authService","activatedRoute","this","title","errorMessage","isDelete","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","data","pageall","pagination_model_1","PaginationModel","getAll","generalsearch_model_1","GeneralSearchModel","searchGeneralFilter_model_1","SearchGeneralFilter","paging","searchModel","getShippingTypeList","items","shippingtypes","error","getEndBuyerList","endbuyers","getBrandList","brands","getDepartmentList","depts","getDivisionList","divisions","ngAfterViewInit","jQuery","errorDiv","nativeElement","hide","fileChangeEvent","fileUpload","files","FormData","i","length","append","name","ajax","type","url","contentType","processData","success","val","UploadPath","attr","Image","FileName","Size","alert","onUpdate","update","displayMessage","onDelete","delete","Id","onBack","deleteConfirm","close","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","isFormChanged","value","oldData","isFormDataChanged","JSON","stringify","__decorate","core_1","ViewChild","Component","selector","template","providers","shipping_service_1","ShippingService","forms_1","FormBuilder","shippingtype_service_1","ShippingTypeService","endbuyer_service_1","EndBuyerService","department_service_1","DepartmentService","brand_service_1","BrandService","division_service_1","DivisionService","exports_1"],"mappings":"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","file":"shipping-edit.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Shipping } from \"../../Shipping/shared/shipping.model\";\nimport { ShippingService } from \"../../Shipping/shared/shipping.service\";\nimport { ShippingTypeService } from \"../../ShippingType/shared/shippingtype.service\";\nimport { ShippingType } from \"../../ShippingType/shared/shippingtype.model\";\nimport { EndBuyerService } from \"../../EndBuyer/shared/endbuyer.service\";\nimport { EndBuyer } from \"../../EndBuyer/shared/endbuyer.model\";\nimport { Department } from \"../../Department/shared/department.model\";\nimport { DepartmentService } from \"../../Department/shared/department.service\";\nimport { Division } from \"../../Division/shared/division.model\";\nimport { DivisionService } from \"../../Division/shared/division.service\";\nimport { Brand } from \"../../Brand/shared/brand.model\";\nimport { BrandService } from \"../../Brand/shared/brand.service\";\nimport { AuthService } from \"../../auth.service\";\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"shipping-edit\",\n    template: `\n<div class=\"error-message\" #errorDiv></div>\n<div>\n    <h2>\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\n            &laquo; Back to Shipping List\n        </a>\n    </h2>\n  <div class=\"user-container\">    \n    <form class=\"form-user\" #shippingForm=\"ngForm\" *ngIf=\"data\"  >\n        <h2 class=\"form-user-heading\">{{title}}</h2>\n        <div class=\"form-group\">\n            <input type=\"hidden\" value=\"{{this.data.Image}}\" id=\"hdImagepath\"/>\n            <input name=\"input-name\" type=\"text\" class=\"form-control\" placeholder=\"Enter name\" [(ngModel)]=\"data.Name\" #name=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />\n            <span class=\"validator-label valid\" *ngIf=\"name.valid\">\n                <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\n                valid!\n            </span>\n            <span class=\"validator-label invalid\" *ngIf=\"!name.valid && !name.pristine\">\n                <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                invalid\n            </span>\n        </div> \n        <div class=\"form-group\">\n            <input name=\"input-buyercode\" type=\"text\" class=\"form-control\" placeholder=\"Enter buyer code\" [(ngModel)]=\"data.BuyerCode\" #buyercode=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div>      \n        <div class=\"form-group\">\n            <select name=\"input-brand\" class=\"form-control\" style=\"width:332px\" [(ngModel)]=\"data.Brand\" #brand=\"ngModel\" (ngModelChange)=\"isFormChanged($event)\">\n                 <option value=\"\">Chose a brand</option>\n                 <option *ngFor=\"let brand of brands\" value=\"{{brand.Id}}\">{{brand.Name}}</option>\n            </select>\n        </div>   \n        <div class=\"form-group\">\n            <select name=\"input-department\" class=\"form-control\" style=\"width:332px\" [(ngModel)]=\"data.Department\" #department=\"ngModel\" (ngModelChange)=\"isFormChanged($event)\">\n                 <option value=\"\">Chose a department</option>\n                    <option *ngFor=\"let dept of depts\" value=\"{{dept.Id}}\">{{dept.Name}}</option>\n            </select>\n        </div>   \n         <div class=\"form-group\">\n            <select name=\"input-division\" class=\"form-control\" style=\"width:332px\" [(ngModel)]=\"data.Division\" #division=\"ngModel\" (ngModelChange)=\"isFormChanged($event)\">\n                  <option value=\"\">Chose a division</option>\n              <option *ngFor=\"let division of divisions\" value=\"{{division.Id}}\">{{division.Name}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <select name=\"input-shippingtype\" class=\"form-control\" style=\"width:332px\" [(ngModel)]=\"data.ShippingType\" #shippingtype=\"ngModel\" (ngModelChange)=\"isFormChanged($event)\">\n                  <option value=\"\">Chose a shipping type</option>\n              <option *ngFor=\"let type of shippingtypes\" value=\"{{type.Id}}\">{{type.Name}}</option>\n            </select>\n        </div>\n         <div class=\"form-group\">\n            <select name=\"input-endbuyer\" class=\"form-control\" style=\"width:332px\" [(ngModel)]=\"data.EndBuyer\" #endbuyer=\"ngModel\" (ngModelChange)=\"isFormChanged($event)\">\n                  <option value=\"\">Chose a endbuyer</option>\n              <option *ngFor=\"let buyer of endbuyers\" value=\"{{buyer.Id}}\">{{buyer.Name}}</option>\n            </select>\n        </div>      \n        <div class=\"form-group\">\n            <input name=\"input-address\" type=\"text\" class=\"form-control\" placeholder=\"Enter address\" [(ngModel)]=\"data.Address\" #address=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n  <div class=\"form-group\">\n            <input name=\"input-contact\" type=\"text\" class=\"form-control\" placeholder=\"Enter contact\" [(ngModel)]=\"data.Contact\" #contact=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n  <div class=\"form-group\">\n            <input name=\"input-country\" type=\"text\" class=\"form-control\" placeholder=\"Enter country\" [(ngModel)]=\"data.Country\" #country=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n        <div class=\"form-group\">\n            <input name=\"input-regname\" type=\"text\" class=\"form-control\" placeholder=\"Enter reg name\" [(ngModel)]=\"data.RegName\" #regname=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n<div class=\"form-group\">\n            <input name=\"input-searchname\" type=\"text\" class=\"form-control\" placeholder=\"Enter search name\" [(ngModel)]=\"data.SearchName\" #searchname=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n<div class=\"form-group\">\n            <input name=\"input-email\" type=\"email\" class=\"form-control\" placeholder=\"Enter email\" [(ngModel)]=\"data.Email\" #email=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n<div class=\"form-group\">\n            <input name=\"input-fax\" type=\"text\" class=\"form-control\" placeholder=\"Enter fax\" [(ngModel)]=\"data.Fax\" #fax=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n<div class=\"form-group\">\n            <input name=\"input-postalcode\" type=\"text\" class=\"form-control\" placeholder=\"Enter postal code\" [(ngModel)]=\"data.PostalCode\" #postalcode=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n<div class=\"form-group\">\n            <input name=\"input-tel\" type=\"tel\" class=\"form-control\" placeholder=\"Enter tel\" [(ngModel)]=\"data.Tel\" #tel=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div>\n<div class=\"form-group\">\n            <input name=\"input-city\" type=\"text\" class=\"form-control\" placeholder=\"Enter city\" [(ngModel)]=\"data.City\" #city=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n <div class=\"form-group\">\n            <input name=\"input-remark\" type=\"text\" class=\"form-control\" placeholder=\"Enter type\" [(ngModel)]=\"data.Remark\" #remark=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />         \n        </div> \n         <div class=\"form-group\">\n         \n                <input type=\"file\" id=\"files\" name=\"files\" multiple />\n                <input type=\"button\" id=\"upload\" (click)=\"fileChangeEvent()\" value=\"Upload\" />\n                <img src=\"{{this.data.Image}}\" alt=\"\" height=\"42\" width=\"42\" id=\"imgPreview\">\n<div class=\"alert alert-success\" id=\"lblinFo\">\n                </div>\n        </div> \n        <div class=\"form-group\">\n           Is Active? <input name=\"input-isActive\" type=\"checkbox\" [(ngModel)]=\"data.IsActive\" #isActive=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"/>           \n        </div>             \n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!shippingForm.valid || !isFormValuesChanged\" value=\"Update\" (click)=\"onUpdate(data)\" /><br/>\n            <input type=\"button\" class=\"btn btn-danger btn-block\" [disabled]=\"!shippingForm.valid\" value=\"Delete\" (click)=\"deleteConfirm()\" />             \n       </div>             \n       <div class=\"dialog\" *ngIf=\"isDelete\">\n          <h3>Are you sure to delete ?</h3>\n            <input type=\"button\" class=\"btn btn-danger btn-block\"  value=\"Yes\" (click)=\"onDelete(data)\" />   <br/>          \n            <input type=\"button\" class=\"btn btn-primary btn-block\"  value=\"No\" (click)=\"close()\" />             \n       </div>\n       <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\n    </form> \n  </div>       \n</div>\n`,\n    providers: [ShippingService, FormBuilder, ShippingTypeService, EndBuyerService, DepartmentService, BrandService, DivisionService]\n})\n\nexport class ShippingEditComponent {\n    data: Shipping;\n    title = \"Edit Shipping\";\n    shippingForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n    isDelete = false;\n    isFormValuesChanged = false;\n    oldData: Shipping;\n    endbuyers: EndBuyer[];\n    shippingtypes: ShippingType[];\n    depts: Department[];\n    brands: Brand[];\n    divisions: Division[];\n    searchModel: GeneralSearchModel;\n    paging: PaginationModel;\n    constructor(\n        private fb: FormBuilder,\n        private shippingService: ShippingService,\n        private shippingtypeService: ShippingTypeService,\n        private endbuyerService: EndBuyerService,\n        private divisionService: DivisionService,\n        private deptServcie: DepartmentService,\n        private brandService: BrandService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n\n        var id =  this.activatedRoute.snapshot.params[\"id\"];\n        if (id) {\n            this.shippingService.get(id).subscribe((data) => {\n                this.data = data;\n            });\n        }\n        else {\n            this.router.navigate([\"shipping/add\"]);\n        }\n        var pageall = new PaginationModel(10, 0, \"Name\", 0, [], 0);\n        var getAll = new GeneralSearchModel(\"\", \"\", \"\", \"\", pageall);\n        var searchGeneralFilter = new SearchGeneralFilter(\"\", \"\", \"\", \"\");\n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\n        this.shippingtypeService.getShippingTypeList(getAll).subscribe(items => this.shippingtypes = items, error => this.errorMessage = <any>error);\n        this.endbuyerService.getEndBuyerList(getAll).subscribe(items => this.endbuyers = items, error => this.errorMessage = <any>error);\n        this.brandService.getBrandList(this.searchModel).subscribe(items => this.brands = items, error => this.errorMessage = <any>error);\n        this.deptServcie.getDepartmentList(this.searchModel).subscribe(items => this.depts = items, error => this.errorMessage = <any>error);\n        this.divisionService.getDivisionList(this.searchModel).subscribe(items => this.divisions = items, error => this.errorMessage = <any>error);\n\n\n   \n    }\n\n    ngAfterViewInit() {\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n    fileChangeEvent() {\n        this.isFormValuesChanged = true;\n        var fileUpload = jQuery(\"#files\").get(0);\n        var files = fileUpload.files;\n        var data = new FormData();\n        for (var i = 0; i < files.length; i++) {\n            data.append(files[i].name, files[i]);\n        }\n        jQuery.ajax({\n            type: \"POST\",\n            url: \"api/shipping/UploadImage\",\n            contentType: false,\n            processData: false,\n            data: data,\n            success: function (data) {\n                jQuery('#hdImagepath').val(data.UploadPath);\n                jQuery('#imgPreview').attr(\"src\", data.UploadPath);\n                this.data.Image = data.UploadPath;\n                jQuery('#lblinFo').append('File ' + data.FileName + ' size ' + data.Size + ' uploaded successfully');\n            },\n            error: function () {\n                alert(\"There was error uploading files!\");\n            }\n        });\n\n    }\n    onUpdate(data: Shipping) {\n        data.Image = jQuery('#hdImagepath').val();\n        this.shippingService.update(data).subscribe((data) => {\n            if (data.error == null) {\n                this.data = data;\n                this.errorMessage = 'Shipping details updated successfully';\n                this.displayMessage(this.errorMessage, true);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        );\n    }\n\n    onDelete(data: Shipping) {\n        this.shippingService.delete(data.Id).subscribe((data) => {\n            if (data.error == null) {\n                this.router.navigate([\"shipping\"]);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        );\n\n        this.isDelete = false;\n    }\n\n    onBack() {\n        this.router.navigate([\"shipping\"]);\n    }\n\n    deleteConfirm() {\n        this.isDelete = true;\n    }\n\n    close() {\n        this.isDelete = false;\n    }\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n\n    isFormChanged(value) {\n        this.shippingService.get(this.data.Id).subscribe((oldData) => {\n            this.isFormDataChanged(oldData);\n        });\n    }\n\n    isFormDataChanged(oldData: Shipping) {\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\n            this.isFormValuesChanged = false;\n        else\n            this.isFormValuesChanged = true;\n    }\n}"]}