{"version":3,"sources":["Shipping/shipping-list/shipping-list.component.ts"],"names":["ShippingListComponent","shippingService","authService","router","this","toggle","isDelete","isLoading","prototype","ngOnInit","_this","isLoggedIn","navigate","title","searchModel","shipping_search_model_1","ShippingSearchModel","getShippingList","subscribe","items","shippings","error","errorMessage","ngAfterViewInit","jQuery","actionDiv","nativeElement","hide","errorDiv","onSelect","data","selectedData","Id","addNewShipping","onDelete","filter","checked","forEach","delete","setTimeout","showActionDiv","status","width","show","direction","deleteConfirm","close","toggleItem","every","length","toggleAll","displayMessage","message","removeClass","innerHTML","addClass","slideDown","delay","slideUp","doSearch","searchmodel","__decorate","core_1","ViewChild","Component","selector","template","providers","shipping_service_1","ShippingService","exports_1"],"mappings":"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","file":"shipping-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { ShippingService } from \"../shared/shipping.service\";\nimport { Shipping } from \"../shared/shipping.model\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../auth.service\";\nimport { ShippingSearchModel } from \"../../Shipping/shared/shipping-search.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'shipping',\n    template: `<div class=\"error-message\" #errorDiv></div>\n<div class=\"user-container\">\n   <h1 class=\"homeHeader\">{{title}}</h1>\n <div class=\"form-inline mt-50\">\n    <div class=\"form-group\">\n      <label class=\"sr-only\" for=\"name\">Name:</label>\n       <input type=\"text\" [(ngModel)]=\"searchModel.Name\" class=\"form-control\" placeholder=\"Enter name\">\n    </div>\n    <div class=\"form-group\">\n      <label class=\"sr-only\" for=\"name\">Code:</label>\n      <input type=\"text\" [(ngModel)]=\"searchModel.Code\" class=\"form-control\" placeholder=\"Enter code\">\n    </div>\n    <div class=\"checkbox\">\n     <label class=\"sr-only\" for=\"name\">Buyer code:</label>\n      <input type=\"text\" [(ngModel)]=\"searchModel.BuyerCode\" class=\"form-control\" placeholder=\"Enter buyer code\">\n    </div>\n    <input type=\"button\" class=\"btn\" value=\"Search\" (click)=\"doSearch(searchModel)\" />\n  </div>\n  <div class=\"col-right-s3 form-group\">\n    <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"Add\" (click)=\"addNewShipping()\" />\n  </div>\n  <div class=\"clearDiv\">\n  </div>\n  <div #actionDiv class=\"col-half-one-third leftPane\">\n     <div class=\"leftPaneContent form-group\">\n        <h2>Bulk Actions</h2>\n        <button class=\"btn btn-danger btn-block\"  (click)=\"deleteConfirm()\" [disabled]=\"isLoading\">                    \n         <div [class.cssload-container]=\"isLoading\">\n           <div [class.cssload-zenith]=\"isLoading\"></div>\n         </div>\n         <div [class.cssload-text]=\"isLoading\">Delete</div>\n        </button>\n                         \n        <div class=\"dialog\" *ngIf=\"isDelete\">\n          <h3>Are you sure to delete checked items ?</h3>\n            <input type=\"button\" class=\"btn btn-danger btn-block\"  value=\"Yes\" (click)=\"onDelete()\" />   <br/>          \n            <input type=\"button\" class=\"btn btn-primary btn-block\"  value=\"No\" (click)=\"close()\" />             \n       </div>\n       <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\n\n     </div>\n  </div>\n  <div class=\"col-half-two-third\">\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>Select All<br/><input type=\"checkbox\" [checked]=\"toggle\" (change)=\"toggleAll()\" /></th>\n            <th>Shipping Name</th>         \n           <th>Buyer Code</th>\n           <th>Brand</th>\n           <th>Division</th>\n           <th>Department</th>\n           <th>Type</th>\n           <th>End Buyer</th>\n          <th>Reg Name</th>         \n          <th>Search Name</th>         \n          <th>Address</th>         \n          <th>Image</th>                 \n       </tr>\n     </thead>\n     <tbody>\n       <tr *ngFor=\"let shipping of shippings\" [class.selected]=\"shipping === selectedData\">        \n        <td><input type=\"checkbox\" #chkSelect value=\"{{shipping.Id}}\" [checked]=\"shipping.checked\" (change)=\"toggleItem(shipping)\" /></td>\n         <td><a href=\"/shipping/edit/{{shipping.Id}}\">{{shipping.Name}}</a></td>              \n         <td>{{shipping.BuyerCode}}</td>        \n         <td>{{shipping.Brand}}</td>        \n         <td>{{shipping.Division}}</td>        \n         <td>{{shipping.Department}}</td>        \n         <td>{{shipping.ShippingType}}</td>        \n         <td>{{shipping.EndBuyer}}</td>\n         <td>{{shipping.RegName}}</td>\n         <td>{{shipping.SearchName}}</td>\n         <td>{{shipping.Address}}</td>\n         <td> <img src=\"{{shipping.Image}}\" alt=\"{{shipping.Name}}\" height=\"42\" width=\"42\"></td>\n      </tr>\n     </tbody>\n    </table>\n  </div>\n  <div class=\"clearDiv\">\n  </div>\n</div>\n`,\n    providers: [ShippingService]\n})\n\nexport class ShippingListComponent {\n    title: \"Shipping List\";\n    selectedData: Shipping;\n    errorMessage: string;\n    toggle = false;\n    isDelete = false;\n    isLoading = false;\n    searchModel: ShippingSearchModel;\n    @ViewChild('actionDiv') actionDiv: ElementRef;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n\n    shippings: Shipping[];\n    constructor(private shippingService: ShippingService, private authService: AuthService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n\n        this.title = \"Shipping List\";\n    \n        this.searchModel = new ShippingSearchModel(\"\", \"\", \"\", \"\");\n        this.shippingService.getShippingList(this.searchModel).subscribe(items => this.shippings = items, error => this.errorMessage = <any>error);\n    }\n\n    ngAfterViewInit() {\n        jQuery(this.actionDiv.nativeElement).hide();\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    onSelect(data: Shipping) {\n        this.selectedData = data;\n        this.router.navigate([\"shipping/edit\", this.selectedData.Id]);\n    }\n\n    addNewShipping() {\n        this.router.navigate([\"shipping/add\"]);\n    }\n\n\n    onDelete(data: Shipping) {\n        this.isDelete = false;\n        this.isLoading = true;\n\n        this.shippings.filter(data => data.checked).forEach(selectedData =>\n            this.shippingService.delete(selectedData.Id).subscribe((data) => {\n                if (data.error == null) {\n                    this.errorMessage = 'deleted selected data(s) successfully';\n                    setTimeout(() => {\n                        this.isLoading = false,\n                            jQuery(this.actionDiv.nativeElement).hide(1000),\n                            this.shippingService.getShippingList(this.searchModel).subscribe(items => this.shippings = items, error => this.errorMessage = <any>error);\n                    }, 2000);\n                }\n            })\n        );\n    }\n    showActionDiv(status: boolean) {\n        var boxWidth = jQuery(this.actionDiv.nativeElement).width();\n        if (status)\n            jQuery(this.actionDiv.nativeElement).show({ direction: \"left\" }, 1000);\n        else\n            jQuery(this.actionDiv.nativeElement).hide(1000);\n    }\n\n    deleteConfirm() {\n        this.isDelete = true;\n    }\n\n    close() {\n        this.isDelete = false;\n    }\n\n    toggleItem(data) {\n        data.checked = !data.checked;\n        this.toggle = this.shippings.every(data => data.checked);\n\n        this.showActionDiv(this.shippings.filter(data => data.checked).length > 0);\n    }\n    toggleAll() {\n        this.toggle = !this.toggle;\n        this.shippings.forEach(data => data.checked = this.toggle);\n        this.showActionDiv(this.shippings.filter(data => data.checked).length > 0);\n    }\n\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n\n    doSearch(searchmodel: ShippingSearchModel) {\n\n        this.shippingService.getShippingList(searchmodel).subscribe(items => this.shippings = items, error => this.errorMessage = <any>error);\n    }\n}"]}