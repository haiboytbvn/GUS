{"version":3,"sources":["SizeRange/sizerange/sizerange-edit.component.ts"],"names":["SizeRangeEditComponent","fb","sizerangeService","router","authService","activatedRoute","this","title","errorMessage","isDelete","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","data","addName","sizenamecount","ValueList","length","console","log","jQuery","append","ngAfterViewInit","errorDiv","nativeElement","hide","onUpdate","namestring","i","val","Value","update","error","displayMessage","onDelete","delete","Id","onBack","deleteConfirm","close","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","isFormChanged","value","oldData","isFormDataChanged","JSON","stringify","__decorate","core_1","ViewChild","Component","selector","template","providers","sizerange_service_1","SizeRangeService","forms_1","FormBuilder","exports_1"],"mappings":"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","file":"sizerange-edit.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { SizeRange } from \"../../SizeRange/shared/sizerange.model\";\nimport { SizeRangeService } from \"../../SizeRange/shared/sizerange.service\";\nimport { AuthService } from \"../../auth.service\";\n\ndeclare var jQuery: any;\n\n@Component({\n    selector: \"sizerange-edit\",\n    template: `\n<div class=\"error-message\" #errorDiv></div>\n<div>\n    <h2>\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\n            &laquo; Back to Size Range List\n        </a>\n    </h2>\n  <div class=\"user-container\">    \n    <form class=\"form-user\" #sizerangeForm=\"ngForm\" *ngIf=\"data\"  >\n        <h2 class=\"form-user-heading\">{{title}}</h2>\n        <div class=\"form-group\">\n            <input name=\"input-name\" type=\"text\" class=\"form-control\" placeholder=\"Enter name\" [(ngModel)]=\"data.Name\" #name=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />\n            <span class=\"validator-label valid\" *ngIf=\"name.valid\">\n                <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\n                valid!\n            </span>\n            <span class=\"validator-label invalid\" *ngIf=\"!name.valid && !name.pristine\">\n                <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                invalid\n            </span>\n        </div>   \n <div class=\"form-group\">\r\n            <input name=\"input-buyercode\" type=\"text\" class=\"form-control\" placeholder=\"Enter buyer code\" [(ngModel)]=\"data.BuyerCode\" #name=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"  />     \r\n        </div> \n\n\n        <div class=\"form-group\" id=\"sizeRangeContainer\">\r\n            <input type=\"text\" class=\"form-control\" style=\"width:50px\" *ngFor=\"let value of data?.ValueList; let i=index\" value=\"{{value}}\" placeholder=\"Enter a size\" id=\"txtSizeName{{i + 1}}\" /> \r\n             \r\n        </div> \n        <div class=\"form-group\">\n            <button (click)=\"addName()\">Add More Size Name</button>\n        </div> \n        <div class=\"form-group\">\n           Is Active? <input name=\"input-isActive\" type=\"checkbox\" [(ngModel)]=\"data.IsActive\" #isActive=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\"/>           \n        </div>                  \n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!name.valid || !isFormValuesChanged\" value=\"Update\" (click)=\"onUpdate(data)\" /><br/>\n            <input type=\"button\" class=\"btn btn-danger btn-block\" [disabled]=\"!name.valid\" value=\"Delete\" (click)=\"deleteConfirm()\" />             \n       </div>             \n       <div class=\"dialog\" *ngIf=\"isDelete\">\n          <h3>Are you sure to delete ?</h3>\n            <input type=\"button\" class=\"btn btn-danger btn-block\"  value=\"Yes\" (click)=\"onDelete(data)\" />   <br/>          \n            <input type=\"button\" class=\"btn btn-primary btn-block\"  value=\"No\" (click)=\"close()\" />             \n       </div>\n       <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\n    </form> \n  </div>       \n</div>\n`,\nproviders: [SizeRangeService,FormBuilder]\n})\n\nexport class SizeRangeEditComponent {\n    data: SizeRange;\n    title = \"Edit Size Range\";\n    sizerangeForm: FormGroup;\n    errorMessage = null;\n    @ViewChild('errorDiv') errorDiv: ElementRef;\n    isDelete = false;\n    isFormValuesChanged = false;\n    oldData: SizeRange;\n    sizenamecount: number;\n\n    constructor(\n        private fb: FormBuilder,\n        private sizerangeService: SizeRangeService,\n        private router: Router,\n        private authService: AuthService,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\n       // this.sizenamecount = this.data.ValueList.length;\n        var id =  this.activatedRoute.snapshot.params[\"id\"];\n        if (id !== \"\") {\n            this.sizerangeService.get(id).subscribe((data) => {\n                this.data = data;\n            });\n        }\n        else {\n            this.router.navigate([\"sizerange/add\"]);\n        }\n    }\n    addName() {\n        this.isFormValuesChanged = true;\n        this.sizenamecount= this.data.ValueList.length + 1;\n        console.log(this.sizenamecount);\n        jQuery('#sizeRangeContainer').append(\"<input type=\\\"text\\\" style=\\\"width:50px\\\" id=\\\"txtSizeName\" + this.sizenamecount + \"\\\" class=\\\"form-control\\\" placeholder= \\\"Enter a size\\\" />\")\n    }\n    ngAfterViewInit() {\n        jQuery(this.errorDiv.nativeElement).hide();\n    }\n\n    onUpdate(data: SizeRange) {\n\n        //get name string\n        var namestring = \"\";\n\n        for (var i = 1; i <= this.sizenamecount; i++) {\n            if (jQuery('#txtSizeName' + i).val !== \"\" && i < this.sizenamecount) {\n                namestring += jQuery('#txtSizeName' + i).val() + \"|\";\n            }\n            else if (jQuery('#txtSizeName' + i).val !== \"\" && i === this.sizenamecount) {\n                namestring += jQuery('#txtSizeName' + i).val();\n            }\n        }\n\n       //====\n\n        data.Value = namestring;\n        this.sizerangeService.update(data).subscribe((data) => {\n            if (data.error == null) {\n                this.data = data;\n                this.errorMessage = 'SizeRange details updated successfully';\n                this.displayMessage(this.errorMessage, true);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        );\n    }\n\n    onDelete(data: SizeRange) {\n        this.sizerangeService.delete(data.Id).subscribe((data) => {\n            if (data.error == null) {\n                this.router.navigate([\"sizerange\"]);\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                this.displayMessage(this.errorMessage, false);\n            }\n        );\n\n        this.isDelete = false;\n    }\n\n    onBack() {\n        this.router.navigate([\"sizerange\"]);\n    }\n\n    deleteConfirm() {\n        this.isDelete = true;\n    }\n\n    close() {\n        this.isDelete = false;\n    }\n\n    displayMessage(message: string, status: boolean) {\n        jQuery(this.errorDiv.nativeElement).removeClass();\n        this.errorDiv.nativeElement.innerHTML = message;\n\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\n\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\n    }\n\n    isFormChanged(value) {\n        this.sizerangeService.get(this.data.Id).subscribe((oldData) => {\n            this.isFormDataChanged(oldData);\n        });\n    }\n\n    isFormDataChanged(oldData: SizeRange) {\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\n            this.isFormValuesChanged = false;\n        else\n            this.isFormValuesChanged = true;\n    }\n}"]}