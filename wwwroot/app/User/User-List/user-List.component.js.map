{"version":3,"sources":["User/User-List/user-List.component.ts"],"names":["UserListComponent","userService","router","authService","this","title","toggle","isDelete","isLoading","prototype","ngOnInit","_this","isLoggedIn","navigate","getApplicationUserList","subscribe","items","users","error","errorMessage","ngAfterViewInit","jQuery","actionDiv","nativeElement","hide","errorDiv","onSelect","data","selectedData","Id","addNewUser","onDelete","filter","checked","forEach","delete","setTimeout","showActionDiv","status","width","show","direction","deleteConfirm","close","toggleItem","every","length","toggleAll","displayMessage","message","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","user_service_1","ApplicationUserService","exports_1"],"mappings":"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","file":"user-List.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\r\nimport { ApplicationUserService } from \"../shared/user.service\";\r\nimport { ApplicationUser } from \"../shared/user.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../auth.service\";\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: \"userList\",\r\n    template: `\r\n    <div class=\"error-message\" #errorDiv></div>\r\n    <div class=\"user-container\">\r\n        <h1 class=\"homeHeader\">{{title}}</h1>\r\n        <div class=\"col-right-s3 form-group\">\r\n            <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"Add\" (click)=\"addNewUser()\" />\r\n        </div>\r\n        <div class=\"clearDiv\">\r\n        </div>\r\n        <div #actionDiv class=\"col-half-one-third leftPane\">\r\n            <div class=\"leftPaneContent form-group\">\r\n                <h2>Bulk Actions</h2>\r\n                <button class=\"btn btn-danger btn-block\" (click)=\"deleteConfirm()\" [disabled]=\"isLoading\">\r\n                    <div [class.cssload-container]=\"isLoading\">\r\n                        <div [class.cssload-zenith]=\"isLoading\"></div>\r\n                    </div>\r\n                    <div [class.cssload-text]=\"isLoading\">Delete</div>\r\n                </button>\r\n\r\n                <div class=\"dialog\" *ngIf=\"isDelete\">\r\n                    <h3>Are you sure to delete checked items ?</h3>\r\n                    <input type=\"button\" class=\"btn btn-danger btn-block\" value=\"Yes\" (click)=\"onDelete()\" />   <br />\r\n                    <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"No\" (click)=\"close()\" />\r\n                </div>\r\n                <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-half-two-third\">\r\n            <table class=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Select All<br /><input type=\"checkbox\" [checked]=\"toggle\" (change)=\"toggleAll()\" /></th>\r\n                        <th>User Name</th>\r\n                        <th>User Code</th>\r\n                        <th>User Type</th>\r\n                        <th>Full Name</th>\r\n                        <th>Email</th>\r\n                        <th>Is Active</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let user of users\" [class.selected]=\"user === selectedData\">\r\n                        <td><input type=\"checkbox\" #chkSelect value=\"{{user.Id}}\" [checked]=\"user.checked\" (change)=\"toggleItem(user)\" /></td>\r\n                        <td><a href=\"userlist/edit/{{user.Id}}\">{{user.UserName}}</a></td>\r\n                        <td>{{user.UserCode}}</td>\r\n                        <td>{{user.Role}}</td>\r\n                        <td>{{user.FirstName + \" \" + user.LastName}}</td>\r\n                        <td>{{user.Email}}</td>\r\n                        <td>{{user.IsActive}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"clearDiv\">\r\n        </div>\r\n    </div>\r\n`\r\n    ,\r\n    providers: [ApplicationUserService]\r\n})\r\nexport class UserListComponent {\r\n    title = \"User List\";\r\n    selectedData: ApplicationUser;\r\n    errorMessage: string;\r\n    toggle = false;\r\n    isDelete = false;\r\n    isLoading = false;\r\n\r\n    @ViewChild('actionDiv') actionDiv: ElementRef;\r\n    @ViewChild('errorDiv') errorDiv: ElementRef;\r\n    users: ApplicationUser[];\r\n\r\n\r\n    constructor(private userService: ApplicationUserService, private router: Router, private authService: AuthService) { }\r\n\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.userService.getApplicationUserList().subscribe(items => this.users = items, error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        jQuery(this.actionDiv.nativeElement).hide();\r\n        jQuery(this.errorDiv.nativeElement).hide();\r\n    }\r\n\r\n    onSelect(data: ApplicationUser) {\r\n        this.selectedData = data;\r\n        this.router.navigate([\"userlist/edit\", this.selectedData.Id]);\r\n    }\r\n\r\n    addNewUser() {\r\n        this.router.navigate([\"userlist/add\"]);\r\n    }\r\n\r\n    onDelete(data: ApplicationUser) {\r\n        this.isDelete = false;\r\n        this.isLoading = true;\r\n\r\n        this.users.filter(data => data.checked).forEach(selectedData =>\r\n            this.userService.delete(selectedData.Id).subscribe((data) => {\r\n                if (data.error == null) {\r\n                    this.errorMessage = 'deleted selected data(s) successfully';\r\n                    setTimeout(() => {\r\n                        this.isLoading = false,\r\n                            jQuery(this.actionDiv.nativeElement).hide(1000),\r\n                            this.userService.getApplicationUserList().subscribe(items => this.users = items, error => this.errorMessage = <any>error);\r\n                    }, 2000);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    showActionDiv(status: boolean) {\r\n        var boxWidth = jQuery(this.actionDiv.nativeElement).width();\r\n        if (status)\r\n            jQuery(this.actionDiv.nativeElement).show({ direction: \"left\" }, 1000);\r\n        else\r\n            jQuery(this.actionDiv.nativeElement).hide(1000);\r\n    }\r\n\r\n    deleteConfirm() {\r\n        this.isDelete = true;\r\n    }\r\n\r\n    close() {\r\n        this.isDelete = false;\r\n    }\r\n\r\n    toggleItem(data) {\r\n        data.checked = !data.checked;\r\n        this.toggle = this.users.every(data => data.checked);\r\n\r\n        this.showActionDiv(this.users.filter(data => data.checked).length > 0);\r\n    }\r\n\r\n    toggleAll() {\r\n        this.toggle = !this.toggle;\r\n        this.users.forEach(data => data.checked = this.toggle);\r\n        this.showActionDiv(this.users.filter(data => data.checked).length > 0);\r\n    }\r\n\r\n    displayMessage(message: string, status: boolean) {\r\n        jQuery(this.errorDiv.nativeElement).removeClass();\r\n        this.errorDiv.nativeElement.innerHTML = message;\r\n\r\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\r\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\r\n\r\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\r\n    }\r\n}"]}