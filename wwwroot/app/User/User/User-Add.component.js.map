{"version":3,"sources":["User/User/User-Add.component.ts"],"names":["UserAddComponent","fb","applicationUserService","router","userRoleService","authService","activatedRoute","this","errorMessage","prototype","ngOnInit","_this","isLoggedIn","navigate","userForm","group","username","forms_1","Validators","required","usercode","userfirstname","userlastname","useremail","isactive","roleId","getUserRoleList","subscribe","items","roles","error","data","user_model_1","ApplicationUser","title","ngAfterViewInit","jQuery","errorDiv","nativeElement","hide","ngOnDestroy","onSubmit","console","log","RoleId","applicationUser","slug","companyid","add","displayMessage","onBack","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","__decorate","core_1","ViewChild","Component","selector","template","providers","user_service_1","ApplicationUserService","FormBuilder","userRole_service_1","UserRoleService","exports_1"],"mappings":"y0CAwGAA,iBAAA,WASI,QAAAA,kBACYC,GACAC,uBACAC,OACAC,gBACAC,YACAC,gBALAC,KAAAN,GAAAA,GACAM,KAAAL,uBAAAA,uBACAK,KAAAJ,OAAAA,OACAI,KAAAH,gBAAAA,gBACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eAXZC,KAAAC,aAAe,KA2GnB,MA5FIR,kBAAAS,UAAAC,SAAA,WAAA,GAAAC,OAAAJ,IACSA,MAAKF,YAAYO,cAClBL,KAAKJ,OAAOU,UAAU,KAE1BN,KAAKO,SAAWP,KAAKN,GAAGc,OAEhBC,UAAW,IACPC,QAAAC,WAAWC,WAEfC,UAAW,IACPH,QAAAC,WAAWC,WAKfE,eAAgB,IACZJ,QAAAC,WAAWC,WAEfG,cAAe,IACXL,QAAAC,WAAWC,WAEfI,WAAY,IACRN,QAAAC,WAAWC,WAEfK,WAAW,GACXC,QAAS,MAGjBlB,KAAKH,gBAAgBsB,kBAAkBC,UAAU,SAAAC,OAAS,MAAAjB,OAAKkB,MAAQD,OAAO,SAAAE,OAAS,MAAAnB,OAAKH,aAAoBsB,QAEhHvB,KAAKwB,KAAO,GAAIC,cAAAC,gBAAgB,GAAI,KAAM,KAAM,MAAM,EAAO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI,GAC7F1B,KAAK2B,MAAQ,YAGjBlC,iBAAAS,UAAA0B,gBAAA,WACIC,OAAO7B,KAAK8B,SAASC,eAAeC,QAGxCvC,iBAAAS,UAAA+B,YAAA,WACIjC,KAAKL,uBAAuB6B,KAAOxB,KAAKwB,MAG5C/B,iBAAAS,UAAAgC,SAAA,SAASV,MAAT,GAAApB,OAAAJ,IACImC,SAAQC,IAAI,iBAAmBpC,KAAKwB,KAAKa,QACzCF,QAAQC,IAAIZ,KACZ,IAAIc,iBAAkB,GAAIb,cAAAC,gBAAgB,GAAI,KAAM,KAAM,KAAMF,KAAKP,SAAUO,KAAKf,SAAUe,KAAKR,UAAWQ,KAAKX,SAAUW,KAAKe,KAAMf,KAAKgB,UAAWhB,KAAKa,OAAQb,KAAKV,cAAeU,KAAKT,cAAc,EAC5Mf,MAAKL,uBAAuB8C,IAAIH,iBAAiBlB,UAAU,SAACI,MACtC,MAAdA,KAAKD,OACLnB,MAAKoB,KAAOA,KACZpB,MAAKH,aAAe,0BACpBG,MAAKsC,eAAetC,MAAKH,cAAc,KAIvCG,MAAKH,aAAeuB,KAAKD,MACzBnB,MAAKsC,eAAetC,MAAKH,cAAc,KAG3C,SAACsB,OACGnB,MAAKH,aAAesB,MACpBnB,MAAKsC,eAAetC,MAAKH,cAAc,MAMnDR,iBAAAS,UAAAyC,OAAA,WACI3C,KAAKJ,OAAOU,UAAU,cAG1Bb,iBAAAS,UAAAwC,eAAA,SAAeE,QAAiBC,QAC5BhB,OAAO7B,KAAK8B,SAASC,eAAee,cACpC9C,KAAK8B,SAASC,cAAcgB,UAAYH,QAEpCC,OAAUhB,OAAO7B,KAAK8B,SAASC,eAAeiB,SAAS,mBACpDnB,OAAO7B,KAAK8B,SAASC,eAAeiB,SAAS,iBAEpDnB,OAAO7B,KAAK8B,SAASC,eAAekB,UAAU,KAAMC,MAAM,KAAMC,QAAQ,MAzF5EC,YAACC,OAAAC,UAAU,uGApGf7D,iBAAA2D,YAACC,OAAAE,WACGC,SAAU,WACVC,SAAU,6oKAwFVC,WAAYC,eAAAC,uBAAwBlD,QAAAmD,YAAaC,mBAAAC,2OAGrDC,UAAA,mBAAAvE","file":"User-Add.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ApplicationUserService } from \"../shared/user.service\";\r\nimport { ApplicationUser } from \"../shared/user.model\";\r\nimport { UserRole } from \"../../UserRole/shared/UserRole.model\";\r\nimport { UserRoleService } from \"../../UserRole/shared/userRole.service\";\r\nimport { AuthService } from \"../../auth.service\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: \"user-add\",\r\n    template: `\r\n    <div class=\"error-message\" #errorDiv></div>\r\n    <div *ngIf=\"data\">\r\n        <h2>\r\n            <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n                &laquo; Back to User List\r\n            </a>\r\n        </h2>\r\n        <div class=\"user-container\">\r\n            <form class=\"form-user\" [formGroup]=\"userForm\">\r\n                <h2 class=\"form-user-heading\">{{title}}</h2>\r\n                \r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Enter user name\" value=\"this.data.UserName\" autofocus />\r\n                    <span class=\"validator-label valid\" *ngIf=\"this.userForm.controls.username.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!this.userForm.controls.username.valid && !this.userForm.controls.username.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input formControlName=\"usercode\" type=\"text\" class=\"form-control\" placeholder=\"Enter user code\" value=\"this.data.UserCode\" autofocus />\r\n                    <span class=\"validator-label valid\" *ngIf=\"this.userForm.controls.usercode.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!this.userForm.controls.usercode.valid && !this.userForm.controls.usercode.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                    <input formControlName=\"userfirstname\" type=\"text\" class=\"form-control\" placeholder=\"Enter user first name\" value=\"this.data.FirstName\" autofocus />\r\n                    <span class=\"validator-label valid\" *ngIf=\"this.userForm.controls.userfirstname.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!this.userForm.controls.userfirstname.valid && !this.userForm.controls.userfirstname.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input formControlName=\"userlastname\" type=\"text\" class=\"form-control\" placeholder=\"Enter user last name\" value=\"this.data.LastName\" autofocus />\r\n                    <span class=\"validator-label valid\" *ngIf=\"this.userForm.controls.userlastname.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!this.userForm.controls.userlastname.valid && !this.userForm.controls.userlastname.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input formControlName=\"useremail\" type=\"text\" class=\"form-control\" placeholder=\"Enter user email\" value=\"this.data.Email\" autofocus />\r\n                    <span class=\"validator-label valid\" *ngIf=\"this.userForm.controls.useremail.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!this.userForm.controls.useremail.valid && !this.userForm.controls.useremail.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    Is Active? <input formControlName=\"isactive\" type=\"checkbox\" value=\"this.data.IsActive\" autofocus />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\n                    <select value=\"this.data.RoleId\" class=\"form-control\" style=\"width:332px\" formControlName=\"roleId\">\n                        <option value=\"\">Chose a Role</option>\n                        <option *ngFor=\"let role of roles\" value=\"{{role.Id}}\">{{role.Name}}</option>\n                    </select>\n                </div>   \r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!userForm.valid\" value=\"Add\" (click)=\"onSubmit(this.userForm.value)\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n`,\r\n    providers: [ApplicationUserService, FormBuilder, UserRoleService]\r\n})\r\n\r\nexport class UserAddComponent {\r\n    data: ApplicationUser;\r\n    title: string;\r\n    userForm: FormGroup;\r\n    errorMessage = null;\r\n    roles: UserRole[];\r\n\r\n    @ViewChild('errorDiv') errorDiv: ElementRef;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private applicationUserService: ApplicationUserService,\r\n        private router: Router,\r\n        private userRoleService: UserRoleService,\r\n        private authService: AuthService,\r\n        private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.userForm = this.fb.group(\r\n            {\r\n                username: [\"\", [\r\n                    Validators.required\r\n                ]],\r\n                usercode: [\"\", [\r\n                    Validators.required\r\n                ]],\r\n                //userrole: [\"\", [\r\n                //    Validators.required\r\n                //]],\r\n                userfirstname: [\"\", [\r\n                    Validators.required\r\n                ]],\r\n                userlastname: [\"\", [\r\n                    Validators.required\r\n                ]],\r\n                useremail: [\"\", [\r\n                    Validators.required\r\n                ]],\r\n                isactive: [false],\r\n                roleId: [\"\"]\r\n            }\r\n        );\r\n        this.userRoleService.getUserRoleList().subscribe(items => this.roles = items, error => this.errorMessage = <any>error);\r\n\r\n        this.data = new ApplicationUser(\"\", null, null, null, false, \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", false);\r\n        this.title = \"New User\";\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        jQuery(this.errorDiv.nativeElement).hide();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.applicationUserService.data = this.data;\r\n    }\r\n\r\n    onSubmit(data: any) {\r\n        console.log(\"data.RoleId : \" + this.data.RoleId);\r\n        console.log(data);\r\n        var applicationUser = new ApplicationUser(\"\", null, null, null, data.isactive, data.username, data.useremail, data.usercode, data.slug, data.companyid, data.RoleId, data.userfirstname, data.userlastname, false);\r\n        this.applicationUserService.add(applicationUser).subscribe((data) => {\r\n            if (data.error == null) {\r\n                this.data = data;\r\n                this.errorMessage = 'User added successfully';\r\n                this.displayMessage(this.errorMessage, true);\r\n            }\r\n            else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                this.displayMessage(this.errorMessage, false);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                this.displayMessage(this.errorMessage, false);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"userlist\"]);\r\n    }\r\n\r\n    displayMessage(message: string, status: boolean) {\r\n        jQuery(this.errorDiv.nativeElement).removeClass();\r\n        this.errorDiv.nativeElement.innerHTML = message;\r\n\r\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\r\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\r\n\r\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\r\n    }\r\n\r\n    // userRole Field\r\n    //<div class=\"form-group\">\r\n    //    <input formControlName=\"userrole\" type=\"text\" class=\"form-control\" placeholder=\"Enter user role\" value=\"this.data.Role\" autofocus />\r\n    //    <span class=\"validator-label valid\" *ngIf=\"this.userForm.controls.userrole.valid\">\r\n    //        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n    //        valid!\r\n    //    </span>\r\n    //    <span class=\"validator-label invalid\" *ngIf=\"!this.userForm.controls.userrole.valid && !this.userForm.controls.userrole.pristine\">\r\n    //        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n    //        invalid\r\n    //    </span>\r\n    //</div>\r\n}"]}