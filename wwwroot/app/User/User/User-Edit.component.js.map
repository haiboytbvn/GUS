{"version":3,"sources":["User/User/User-Edit.component.ts"],"names":["UserEditComponent","fb","applicationUserService","router","authService","activatedRoute","this","title","errorMessage","isDelete","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","data","ngAfterViewInit","jQuery","errorDiv","nativeElement","hide","onUpdate","update","error","displayMessage","onDelete","delete","Id","onBack","deleteConfirm","close","message","status","removeClass","innerHTML","addClass","slideDown","delay","slideUp","isFormChanged","value","oldData","isFormDataChanged","console","log","JSON","stringify","__decorate","core_1","ViewChild","Component","selector","template","providers","user_service_1","ApplicationUserService","forms_1","FormBuilder","exports_1"],"mappings":"4mCAkHAA,kBAAA,WAUI,QAAAA,mBACYC,GACAC,uBACAC,OACAC,YACAC,gBAJAC,KAAAL,GAAAA,GACAK,KAAAJ,uBAAAA,uBACAI,KAAAH,OAAAA,OACAG,KAAAF,YAAAA,YACAE,KAAAD,eAAAA,eAbZC,KAAAC,MAAQ,YAERD,KAAAE,aAAe,KAEfF,KAAAG,UAAW,EACXH,KAAAI,qBAAsB,EA2G1B,MAhGIV,mBAAAW,UAAAC,SAAA,WAAA,GAAAC,OAAAP,IACSA,MAAKF,YAAYU,cAClBR,KAAKH,OAAOY,UAAU,IAG1B,IAAIC,IAAKV,KAAKD,eAAeY,SAASC,OAAW,EACtC,MAAPF,GACAV,KAAKJ,uBAAuBiB,IAAIH,IAAII,UAAU,SAACC,MAC3CR,MAAKQ,KAAOA,OAIhBf,KAAKH,OAAOY,UAAU,kBAI9Bf,kBAAAW,UAAAW,gBAAA,WACIC,OAAOjB,KAAKkB,SAASC,eAAeC,QAGxC1B,kBAAAW,UAAAgB,SAAA,SAASN,MAAT,GAAAR,OAAAP,IACIA,MAAKJ,uBAAuB0B,OAAOP,MAAMD,UAAU,SAACC,MAC9B,MAAdA,KAAKQ,OACLhB,MAAKQ,KAAOA,KACZR,MAAKL,aAAe,oCACpBK,MAAKiB,eAAejB,MAAKL,cAAc,KAIvCK,MAAKL,aAAea,KAAKQ,MACzBhB,MAAKiB,eAAejB,MAAKL,cAAc,KAG3C,SAACqB,OACGhB,MAAKL,aAAeqB,MACpBhB,MAAKiB,eAAejB,MAAKL,cAAc,MAKnDR,kBAAAW,UAAAoB,SAAA,SAASV,MAAT,GAAAR,OAAAP,IACIA,MAAKJ,uBAAuB8B,OAAOX,KAAKY,IAAIb,UAAU,SAACC,MACjC,MAAdA,KAAKQ,MACLhB,MAAKV,OAAOY,UAAU,cAItBF,MAAKL,aAAea,KAAKQ,MACzBhB,MAAKiB,eAAejB,MAAKL,cAAc,KAG3C,SAACqB,OACGhB,MAAKL,aAAeqB,MACpBhB,MAAKiB,eAAejB,MAAKL,cAAc,KAI/CF,KAAKG,UAAW,GAGpBT,kBAAAW,UAAAuB,OAAA,WACI5B,KAAKH,OAAOY,UAAU,cAG1Bf,kBAAAW,UAAAwB,cAAA,WACI7B,KAAKG,UAAW,GAGpBT,kBAAAW,UAAAyB,MAAA,WACI9B,KAAKG,UAAW,GAGpBT,kBAAAW,UAAAmB,eAAA,SAAeO,QAAiBC,QAC5Bf,OAAOjB,KAAKkB,SAASC,eAAec,cACpCjC,KAAKkB,SAASC,cAAce,UAAYH,QAEpCC,OAAUf,OAAOjB,KAAKkB,SAASC,eAAegB,SAAS,mBACpDlB,OAAOjB,KAAKkB,SAASC,eAAegB,SAAS,iBAEpDlB,OAAOjB,KAAKkB,SAASC,eAAeiB,UAAU,KAAMC,MAAM,KAAMC,QAAQ,MAG5E5C,kBAAAW,UAAAkC,cAAA,SAAcC,OAAd,GAAAjC,OAAAP,IACIA,MAAKJ,uBAAuBiB,IAAIb,KAAKe,KAAKY,IAAIb,UAAU,SAAC2B,SACrDlC,MAAKmC,kBAAkBD,YAI/B/C,kBAAAW,UAAAqC,kBAAA,SAAkBD,SACdE,QAAQC,IAAI5C,KAAKe,MACjB4B,QAAQC,IAAIH,SACRI,KAAKC,UAAU9C,KAAKe,QAAU8B,KAAKC,UAAUL,SAC7CzC,KAAKI,qBAAsB,EAE3BJ,KAAKI,qBAAsB,GA3GnC2C,YAACC,OAAAC,UAAU,wGA9GfvD,kBAAAqD,YAACC,OAAAE,WACGC,SAAU,YACVC,SAAU,kqMAoGVC,WAAYC,eAAAC,uBAAwBC,QAAAC,qMAGxCC,UAAA,oBAAAhE","file":"User-Edit.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ApplicationUserService } from \"../shared/user.service\";\r\nimport { ApplicationUser } from \"../shared/user.model\";\r\nimport { AuthService } from \"../../auth.service\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: \"user-edit\",\r\n    template: `\r\n    <div class=\"error-message\" #errorDiv></div>\r\n    <div>\r\n        <h2>\r\n            <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n                &laquo; Back to User List\r\n            </a>\r\n        </h2>\r\n        <div class=\"user-container\">\r\n            <form class=\"form-user\" #userForm=\"ngForm\" *ngIf=\"data\">\r\n                <h2 class=\"form-user-heading\">{{title}}</h2>\r\n                \r\n\r\n                \r\n                <div class=\"form-group\">\r\n                    <input name=\"input-name\" type=\"text\" class=\"form-control\" placeholder=\"Enter user name\" [(ngModel)]=\"data.UserName\" #username=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                    <span class=\"validator-label valid\" *ngIf=\"username.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!username.valid && !username.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input name=\"input-code\" type=\"text\" class=\"form-control\" placeholder=\"Enter user code\" [(ngModel)]=\"data.UserCode\" #usercode=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                    <span class=\"validator-label valid\" *ngIf=\"usercode.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!usercode.valid && !usercode.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input name=\"input-role\" type=\"text\" class=\"form-control\" placeholder=\"Enter role\" [(ngModel)]=\"data.Role\" #userrole=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                    <span class=\"validator-label valid\" *ngIf=\"userrole.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!userrole.valid && !userrole.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input name=\"input-firstname\" type=\"text\" class=\"form-control\" placeholder=\"Enter first name\" [(ngModel)]=\"data.FirstName\" #userfirstname=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                    <span class=\"validator-label valid\" *ngIf=\"userfirstname.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!userfirstname.valid && !userfirstname.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input name=\"input-lastname\" type=\"text\" class=\"form-control\" placeholder=\"Enter last name\" [(ngModel)]=\"data.LastName\" #userlastname=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                    <span class=\"validator-label valid\" *ngIf=\"userlastname.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!userlastname.valid && !userlastname.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input name=\"input-email\" type=\"text\" class=\"form-control\" placeholder=\"Enter user email\" [(ngModel)]=\"data.Email\" #useremail=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                    <span class=\"validator-label valid\" *ngIf=\"useremail.valid\">\r\n                        <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>\r\n                        valid!\r\n                    </span>\r\n                    <span class=\"validator-label invalid\" *ngIf=\"!useremail.valid && !useremail.pristine\">\r\n                        <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                        invalid\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    Is Active? <input name=\"input-isActive\" type=\"checkbox\" [(ngModel)]=\"data.IsActive\" #isActive=\"ngModel\" autofocus required (ngModelChange)=\"isFormChanged($event)\" />\r\n                </div>\r\n                \r\n                \r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"button\" class=\"btn btn-primary btn-block\" [disabled]=\"!username.valid || !isFormValuesChanged\" value=\"Update\" (click)=\"onUpdate(data)\" /><br />\r\n                    <input type=\"button\" class=\"btn btn-danger btn-block\" [disabled]=\"!username.valid\" value=\"Delete\" (click)=\"deleteConfirm()\" />\r\n                </div>\r\n                <div class=\"dialog\" *ngIf=\"isDelete\">\r\n                    <h3>Are you sure to delete ?</h3>\r\n                    <input type=\"button\" class=\"btn btn-danger btn-block\" value=\"Yes\" (click)=\"onDelete(data)\" />   <br />\r\n                    <input type=\"button\" class=\"btn btn-primary btn-block\" value=\"No\" (click)=\"close()\" />\r\n                </div>\r\n                <div *ngIf=\"isDelete\" class=\"overlay\" (click)=\"Close()\"></div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n`,\r\n    providers: [ApplicationUserService, FormBuilder]\r\n})\r\n\r\nexport class UserEditComponent {\r\n    data: ApplicationUser;\r\n    title = \"Edit User\";\r\n    userForm: FormGroup;\r\n    errorMessage = null;\r\n    @ViewChild('errorDiv') errorDiv: ElementRef;\r\n    isDelete = false;\r\n    isFormValuesChanged = false;\r\n    oldData: ApplicationUser;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private applicationUserService: ApplicationUserService,\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n\r\n        var id = this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id !== \"\") {\r\n            this.applicationUserService.get(id).subscribe((data) => {\r\n                this.data = data;\r\n            });\r\n        }\r\n        else {\r\n            this.router.navigate([\"userlist/add\"]);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        jQuery(this.errorDiv.nativeElement).hide();\r\n    }\r\n\r\n    onUpdate(data: ApplicationUser) {\r\n        this.applicationUserService.update(data).subscribe((data) => {\r\n            if (data.error == null) {\r\n                this.data = data;\r\n                this.errorMessage = 'User details updated successfully';\r\n                this.displayMessage(this.errorMessage, true);\r\n            }\r\n            else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                this.displayMessage(this.errorMessage, false);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                this.displayMessage(this.errorMessage, false);\r\n            }\r\n        );\r\n    }\r\n\r\n    onDelete(data: ApplicationUser) {\r\n        this.applicationUserService.delete(data.Id).subscribe((data) => {\r\n            if (data.error == null) {\r\n                this.router.navigate([\"userlist\"]);\r\n            }\r\n            else {\r\n                // update failure\r\n                this.errorMessage = data.error;\r\n                this.displayMessage(this.errorMessage, false);\r\n            }\r\n        },\r\n            (error) => {\r\n                this.errorMessage = error;\r\n                this.displayMessage(this.errorMessage, false);\r\n            }\r\n        );\r\n\r\n        this.isDelete = false;\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"userlist\"]);\r\n    }\r\n\r\n    deleteConfirm() {\r\n        this.isDelete = true;\r\n    }\r\n\r\n    close() {\r\n        this.isDelete = false;\r\n    }\r\n\r\n    displayMessage(message: string, status: boolean) {\r\n        jQuery(this.errorDiv.nativeElement).removeClass();\r\n        this.errorDiv.nativeElement.innerHTML = message;\r\n\r\n        if (status) { jQuery(this.errorDiv.nativeElement).addClass(\"success-message\"); }\r\n        else { jQuery(this.errorDiv.nativeElement).addClass(\"error-message\"); }\r\n\r\n        jQuery(this.errorDiv.nativeElement).slideDown(1000).delay(6000).slideUp(1000);\r\n    }\r\n\r\n    isFormChanged(value) {\r\n        this.applicationUserService.get(this.data.Id).subscribe((oldData) => {\r\n            this.isFormDataChanged(oldData);\r\n        });\r\n    }\r\n\r\n    isFormDataChanged(oldData: ApplicationUser) {\r\n        console.log(this.data);\r\n        console.log(oldData);\r\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\r\n            this.isFormValuesChanged = false;\r\n        else\r\n            this.isFormValuesChanged = true;\r\n    }\r\n}"]}