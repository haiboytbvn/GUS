{"version":3,"sources":["GraphicType/graphictype-list/graphictype-list.component.ts"],"names":["GraphicTypeListComponent","graphictypeService","authService","router","fb","acctypeService","this","title","pagesizearr","isFormValuesChanged","prototype","ngOnInit","_this","isLoggedIn","navigate","paging","pagination_model_1","PaginationModel","searchModel","generalsearch_model_1","GeneralSearchModel","getGraphicTypeList","subscribe","items","ACdata","error","errorMessage","graphictypeAddForm","group","id","name","forms_1","Validators","required","isactive","data","graphictype_model_1","GraphicType","itemid","changePage","i","Paging","PageNumber","changeSize","PageSize","onSubmit","console","log","graphictype","add","alert","jQuery","val","prop","modal","onAdd","onUpdate","update","onEdit","get","isFormChanged","value","Id","oldData","isFormDataChanged","JSON","stringify","__decorate","core_1","Component","selector","templateUrl","providers","graphictype_service_1","GraphicTypeService","FormBuilder","exports_1"],"mappings":"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","file":"graphictype-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { GraphicTypeService } from \"../shared/graphictype.service\";\nimport { GraphicType } from \"../shared/graphictype.model\";\nimport { PaginationModel } from \"../../Pagination/shared/pagination.model\";\nimport { GeneralSearchModel } from \"../../Pagination/shared/generalsearch.model\";\nimport { GraphicTypeListModel } from \"../shared/graphictype-list.model\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../auth.service\";\nimport { SearchGeneralFilter } from \"../../SearchGeneralFilter/shared/searchGeneralFilter.model\";\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'graphictype',\n    templateUrl: 'app/GraphicType/graphictype-list/graphictype-list.component.html',\n    providers: [GraphicTypeService, GraphicTypeService, FormBuilder]\n})\n\nexport class GraphicTypeListComponent {\n    data: GraphicType;\n    title = \"Graphic Type\";\n    selectedData: GraphicType;\n    errorMessage: string;\n    searchModel: GeneralSearchModel;\n    paging: PaginationModel;\n    graphictypeAddForm: FormGroup;\n    accessorycategories: GraphicType[];\n    ACdata: GraphicTypeListModel;\n    pagesizearr: number[] = [10, 20, 30, 0];\n    types: GraphicType[];\n    itemid: string;\n    isFormValuesChanged = false;\n    graphictypeEditForm: FormGroup;\n    constructor(private graphictypeService: GraphicTypeService,\n        private authService: AuthService,\n        private router: Router,\n        private fb: FormBuilder,\n        private acctypeService: GraphicTypeService\n    ) {\n    }\n\n    ngOnInit() {\n        if (!this.authService.isLoggedIn()) {\n            this.router.navigate([\"\"]);\n        }\n        this.paging = new PaginationModel(10, 1, \"Name\", 0, [], 0);\n        this.searchModel = new GeneralSearchModel(\"\", \"\", \"\", \"\", this.paging);\n        this.graphictypeService.getGraphicTypeList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\n        this.graphictypeAddForm = this.fb.group(\n            {\n                id: [\"\"],\n                name: [\"\", [Validators.required]],\n                isactive: [true]\n            }\n        );   \n        this.data = new GraphicType(\"\",false, \"\");\n        this.itemid = \"\";\n    }\n    changePage(i: number) {\n        this.searchModel.Paging.PageNumber = i;\n        this.graphictypeService.getGraphicTypeList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\n    }\n\n    changeSize(i: number) {\n        if (i == 0) {\n            this.searchModel.Paging.PageNumber = 0;\n        } else {\n            this.searchModel.Paging.PageSize = i;\n            this.searchModel.Paging.PageNumber = 1;\n        }\n\n        this.graphictypeService.getGraphicTypeList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\n    }\n   \n    onSubmit(data: any) {\n        console.log(data);\n        var graphictype = new GraphicType(\"\", data.isactive, data.name);\n        this.graphictypeService.add(graphictype).subscribe((data) => {\n            if (data.error == null) {\n\n\n                this.graphictypeService.getGraphicTypeList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\n                alert(\"added successfully\");\n                this.data = new GraphicType(\"\", false, \"\");\n                jQuery('#txtName').val('');\n                jQuery('#drType').val('');\n                jQuery('#ckIsActive').prop('checked', true);\n            } else {\n                // update failure\n                this.errorMessage = data.error;\n                alert(this.errorMessage);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                alert(this.errorMessage);\n            }\n        );\n        jQuery('#myModalAdd').modal('hide');\n\n\n\n    }\n    onAdd() {\n        jQuery('#txtName').val('');\n        jQuery('#drType').val('');\n        jQuery('#ckIsActive').prop('checked', true);\n    }\n    onUpdate(data: any) {\n        // else, update it\n        // var graphictype = new GraphicType(data.id, null, null, data.isactive, data.name, false, data.buyercode, data.acctype);\n        console.log(data);\n        this.graphictypeService.update(data).subscribe((data) => {\n            if (data.error == null) {\n                this.data = data;\n                this.graphictypeService.getGraphicTypeList(this.searchModel).subscribe(items => this.ACdata = items, error => this.errorMessage = <any>error);\n                alert(\"updated successfully\");\n                jQuery('#myModalEdit').modal('hide');\n                this.itemid == \"\";\n            }\n            else {\n                // update failure\n                this.errorMessage = data.error;\n                alert(this.errorMessage);\n            }\n        },\n            (error) => {\n                this.errorMessage = error;\n                alert(this.errorMessage);\n            }\n        );\n    }\n    onEdit(id: string) {\n        this.itemid = id;\n        if (id !== \"\") {\n            this.graphictypeService.get(id).subscribe((data) => {\n                this.data = data;\n            });\n        }\n    }\n    isFormChanged(value) {\n        this.graphictypeService.get(this.data.Id).subscribe((oldData) => {\n            this.isFormDataChanged(oldData);\n        });\n    }\n\n    isFormDataChanged(oldData: GraphicType) {\n        if (JSON.stringify(this.data) === JSON.stringify(oldData))\n            this.isFormValuesChanged = false;\n        else\n            this.isFormValuesChanged = true;\n    }\n}"]}